{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Python-Plisio-SDK","text":""},{"location":"#about","title":"About","text":"<p>Plisio is a payment gateway for accepting payments in cryptocurrencies. Plisio enables your customers to pay with 15+ cryptocurrencies, including Bitcoin, Ethereum, Litecoin, Dash, etc.</p> <p>I'm in no way affiliated with Plisio and this is not an official SDK.</p>"},{"location":"#installation","title":"Installation","text":"<p>Install using <code>pip</code></p> <p>pip install python-plisio</p> <p>Install from <code>git</code></p> <p>pip install git+https://github.com/amiwrpremium/python-plisio.git</p>"},{"location":"#usage","title":"Usage","text":"<p>See examples for more usage examples.</p>"},{"location":"#documentation","title":"Documentation","text":"<p>See documentation.</p>"},{"location":"#license","title":"License","text":"<p>See LICENSE.</p>"},{"location":"#disclaimer","title":"Disclaimer","text":"<p>This is not an official SDK, and I am in no way affiliated with Plisio.</p>"},{"location":"examples/","title":"Examples","text":"<p>Here are some examples which help you to get started with the library.</p>"},{"location":"examples/#initiate","title":"Initiate","text":"<p>You can initiate the client with or without request params.</p> See Also <p>Code Reference: Client</p> SyncAsyncWith Request ParamsAsync With Request Params client.py<pre><code>from plisio import Client\nclient = Client(\"&lt;API_KEY&gt;\")\n</code></pre> client.py<pre><code>import asyncio\nfrom plisio import AsyncClient\nclient = AsyncClient(\"&lt;API_KEY&gt;\")\n</code></pre> with_request_params.py<pre><code>from plisio import Client\nclient = Client(\"&lt;API_KEY&gt;\", requests_params={\n\"timeout\": 10\n})\n</code></pre> async_with_request_params.py<pre><code>import asyncio\nfrom plisio import AsyncClient\nclient = AsyncClient(\"&lt;API_KEY&gt;\", requests_params={\n\"timeout\": 10\n})\n</code></pre>"},{"location":"examples/#transactions","title":"Transactions","text":"<p>Query transactions.</p> See Also <p>Sync Code Reference: Client.transactions Async Code Reference: AsyncClient.transactions</p> <p>API Reference: Transactions</p> SyncAsync get_transactions.py<pre><code>def main():\ntransactions = client.transactions()\nprint(transactions)\nmain()\n</code></pre> get_transactions.py<pre><code>async def main():\ntransactions = await client.transactions()\nprint(transactions)\nasyncio.run(main())\n</code></pre> output<pre><code>{'status': 'success', 'data': {'operations': [], '_links': {'self': {'href': 'https://plisio.net/api/v1/operations?api_key=By3QOfFqVu3w8mH7BZm5QO3T-Gq4fVnAaaCz790zFoLVamWWsR24ON_HlGUbjScd&amp;page=1&amp;per-page=10'}}, '_meta': {'totalCount': 0, 'pageCount': 0, 'currentPage': 1, 'perPage': 10}}}\n</code></pre>"},{"location":"examples/#create-invoice","title":"Create Invoice","text":"<p>Create an invoice.</p> See Also <p>Sync Code Reference: Client.invoice Async Code Reference: AsyncClient.invoice</p> <p>API Reference: Create Invoice</p> SyncAsync create_invoice.py<pre><code>def main():\ninvoice = client.invoice(\norder_name=\"test\",\norder_number=\"test\",\namount=1,\ncurrency=\"BTC\",\n)\nprint(invoice)\nmain()\n</code></pre> create_invoice.py<pre><code>async def main():\ninvoice = await client.invoice(\norder_name=\"test\",\norder_number=\"test\",\namount=1,\ncurrency=\"BTC\",\n)\nprint(invoice)\nasyncio.run(main())\n</code></pre> output<pre><code>{'status': 'success', 'data': {'txn_id': '6470c20600b6719c3f063d59', 'invoice_url': 'https://plisio.net/invoice/6470c20600b6719c3f063d59', 'invoice_total_sum': '1.00000000'}}\n</code></pre>"},{"location":"examples/SUMMARY/","title":"SUMMARY","text":"<ul> <li>Examples</li> </ul>"},{"location":"reference/SUMMARY/","title":"SUMMARY","text":"<ul> <li>clients<ul> <li>async_client</li> <li>client</li> </ul> </li> <li>enums</li> <li>exceptions</li> <li>utils</li> </ul>"},{"location":"reference/enums/","title":"enums","text":"<p>Enum for Plisio API.</p>"},{"location":"reference/enums/#src.plisio.enums.Currencies","title":"<code>Currencies</code>","text":"<p>         Bases: <code>Enum</code></p> <p>Currencies.</p> Source code in <code>src/plisio/enums.py</code> <pre><code>class Currencies(Enum):\n\"\"\"\n    Currencies.\n    \"\"\"\nETH = \"Ethereum\"\nBTC = \"Bitcoin\"\nLTC = \"Litecoin\"\nDASH = \"Dash\"\nTZEC = \"Zcash\"\nDOGE = \"Dogecoin\"\nBCH = \"Bitcoin Cash\"\nXMR = \"Monero\"\nUSDT = \"Tether ERC-20\"\nUSDC = \"USD Coin\"\nSHIB = \"Shiba Inu\"\nBTT = \"BitTorrent TRC-20\"\nUSDT_TRX = \"Tether TRC-20\"\nTRX = \"Tron\"\nBNB = \"BNB Chain\"\nBUSD = \"Binance USD BEP-20\"\nUSDT_BSC = \"Tether BEP-20\"\n</code></pre>"},{"location":"reference/enums/#src.plisio.enums.Enum","title":"<code>Enum</code>","text":"<p>         Bases: <code>_Enum</code></p> <p>Enum.</p> Source code in <code>src/plisio/enums.py</code> <pre><code>class Enum(_Enum, metaclass=EnumMeta):\n\"\"\"\n    Enum.\n    \"\"\"\ndef __str__(self) -&gt; str:\n\"\"\"\n        String representation.\n        \"\"\"\nreturn str(self.value)\ndef __repr__(self) -&gt; str:\n\"\"\"\n        Representation.\n        \"\"\"\nreturn f\"{self.__class__.__name__}.{self.name}\"\n</code></pre>"},{"location":"reference/enums/#src.plisio.enums.Enum.__repr__","title":"<code>__repr__()</code>","text":"<p>Representation.</p> Source code in <code>src/plisio/enums.py</code> <pre><code>def __repr__(self) -&gt; str:\n\"\"\"\n    Representation.\n    \"\"\"\nreturn f\"{self.__class__.__name__}.{self.name}\"\n</code></pre>"},{"location":"reference/enums/#src.plisio.enums.Enum.__str__","title":"<code>__str__()</code>","text":"<p>String representation.</p> Source code in <code>src/plisio/enums.py</code> <pre><code>def __str__(self) -&gt; str:\n\"\"\"\n    String representation.\n    \"\"\"\nreturn str(self.value)\n</code></pre>"},{"location":"reference/enums/#src.plisio.enums.EnumMeta","title":"<code>EnumMeta</code>","text":"<p>         Bases: <code>_EnumMeta</code></p> <p>Enum Meta.</p> Source code in <code>src/plisio/enums.py</code> <pre><code>class EnumMeta(_EnumMeta):\n\"\"\"\n    Enum Meta.\n    \"\"\"\ndef __iter__(cls) -&gt; _Iterator:\n\"\"\"\n        Iterate over Enum.\n        \"\"\"\nreturn ((member.value, member.name) for member in super().__iter__())  # type: ignore[var-annotated]\ndef __getitem__(cls, name: str):  # type: ignore[no-untyped-def]\n\"\"\"\n        Get Enum item by name.\n        \"\"\"\nreturn cls[name.upper()]  # pylint: disable=unsubscriptable-object\ndef __contains__(cls, name: str) -&gt; bool:  # type: ignore[override]\n\"\"\"\n        Check if Enum contains item.\n        \"\"\"\nreturn name.upper() in cls.__members__  # pylint: disable=unsupported-membership-test\ndef __str__(cls) -&gt; str:\n\"\"\"\n        String representation.\n        \"\"\"\nreturn f\"&lt;enum {cls.__name__}&gt;\"\ndef __repr__(cls) -&gt; str:\n\"\"\"\n        Representation.\n        \"\"\"\nreturn f\"&lt;enum {cls.__name__}&gt;\"\n</code></pre>"},{"location":"reference/enums/#src.plisio.enums.EnumMeta.__contains__","title":"<code>__contains__(name)</code>","text":"<p>Check if Enum contains item.</p> Source code in <code>src/plisio/enums.py</code> <pre><code>def __contains__(cls, name: str) -&gt; bool:  # type: ignore[override]\n\"\"\"\n    Check if Enum contains item.\n    \"\"\"\nreturn name.upper() in cls.__members__  # pylint: disable=unsupported-membership-test\n</code></pre>"},{"location":"reference/enums/#src.plisio.enums.EnumMeta.__getitem__","title":"<code>__getitem__(name)</code>","text":"<p>Get Enum item by name.</p> Source code in <code>src/plisio/enums.py</code> <pre><code>def __getitem__(cls, name: str):  # type: ignore[no-untyped-def]\n\"\"\"\n    Get Enum item by name.\n    \"\"\"\nreturn cls[name.upper()]  # pylint: disable=unsubscriptable-object\n</code></pre>"},{"location":"reference/enums/#src.plisio.enums.EnumMeta.__iter__","title":"<code>__iter__()</code>","text":"<p>Iterate over Enum.</p> Source code in <code>src/plisio/enums.py</code> <pre><code>def __iter__(cls) -&gt; _Iterator:\n\"\"\"\n    Iterate over Enum.\n    \"\"\"\nreturn ((member.value, member.name) for member in super().__iter__())  # type: ignore[var-annotated]\n</code></pre>"},{"location":"reference/enums/#src.plisio.enums.EnumMeta.__repr__","title":"<code>__repr__()</code>","text":"<p>Representation.</p> Source code in <code>src/plisio/enums.py</code> <pre><code>def __repr__(cls) -&gt; str:\n\"\"\"\n    Representation.\n    \"\"\"\nreturn f\"&lt;enum {cls.__name__}&gt;\"\n</code></pre>"},{"location":"reference/enums/#src.plisio.enums.EnumMeta.__str__","title":"<code>__str__()</code>","text":"<p>String representation.</p> Source code in <code>src/plisio/enums.py</code> <pre><code>def __str__(cls) -&gt; str:\n\"\"\"\n    String representation.\n    \"\"\"\nreturn f\"&lt;enum {cls.__name__}&gt;\"\n</code></pre>"},{"location":"reference/enums/#src.plisio.enums.FeePlans","title":"<code>FeePlans</code>","text":"<p>         Bases: <code>Enum</code></p> <p>Fee Plans.</p> Source code in <code>src/plisio/enums.py</code> <pre><code>class FeePlans(Enum):\n\"\"\"\n    Fee Plans.\n    \"\"\"\nNORMAL = \"normal\"\nPRIORITY = \"priority\"\n</code></pre>"},{"location":"reference/enums/#src.plisio.enums.FiatCurrency","title":"<code>FiatCurrency</code>","text":"<p>         Bases: <code>Enum</code></p> <p>Fiat currencies.</p> Source code in <code>src/plisio/enums.py</code> <pre><code>class FiatCurrency(Enum):\n\"\"\"\n    Fiat currencies.\n    \"\"\"\nAED = \"United Arab Emirates Dirham\"\nAFN = \"Afghan Afghani\"\nALL = \"Albanian Lek\"\nAMD = \"Armenian Dram\"\nANG = \"Netherlands Antillean Guilder\"\nAOA = \"Angolan Kwanza\"\nARS = \"Argentine Peso\"\nAUD = \"Australian Dollar\"\nAWG = \"Aruban Florin\"\nAZN = \"Azerbaijani Manat\"\nBAM = \"Bosnia-Herzegovina Convertible Mark\"\nBBD = \"Barbadian Dollar\"\nBDT = \"Bangladeshi Taka\"\nBGN = \"Bulgarian Lev\"\nBHD = \"Bahraini Dinar\"\nBIF = \"Burundian Franc\"\nBMD = \"Bermuda Dollar\"\nBND = \"Brunei Dollar\"\nBOB = \"Bolivian Boliviano\"\nBRL = \"Brazilian Real\"\nBSD = \"Bahamian Dollar\"\nBTN = \"Bhutanese Ngultrum\"\nBWP = \"Botswana Pula\"\nBYN = \"New Belarusian Ruble\"\nBYR = \"Belarusian Ruble\"\nBZD = \"Belize Dollar\"\nCAD = \"Canadian Dollar\"\nCDF = \"Congolese Franc\"\nCHF = \"Swiss Franc\"\nCLF = \"Chilean Unit of Account (UF)\"\nCLP = \"Chilean Peso\"\nCNY = \"Chinese Yuan\"\nCOP = \"Colombian Peso\"\nCRC = \"Costa Rican Col\u00f3n\"\nCUC = \"Cuban Convertible Peso\"\nCUP = \"Cuban Peso\"\nCVE = \"Cape Verdean Escudo\"\nCZK = \"Czech Republic Koruna\"\nDJF = \"Djiboutian Franc\"\nDKK = \"Danish Krone\"\nDOP = \"Dominican Peso\"\nDZD = \"Algerian Dinar\"\nEGP = \"Egyptian Pound\"\nERN = \"Eritrean Nakfa\"\nETB = \"Ethiopian Birr\"\nEUR = \"Euro\"\nFJD = \"Fijian Dollar\"\nFKP = \"Falkland Islands Pound\"\nGBP = \"British Pound Sterling\"\nGEL = \"Georgian Lari\"\nGGP = \"Guernsey Pound\"\nGHS = \"Ghanaian Cedi\"\nGIP = \"Gibraltar Pound\"\nGMD = \"Gambian Dalasi\"\nGNF = \"Guinean Franc\"\nGTQ = \"Guatemalan Quetzal\"\nGYD = \"Guyanese Dollar\"\nHKD = \"Hong Kong Dollar\"\nHNL = \"Honduran Lempira\"\nHRK = \"Croatian Kuna\"\nHTG = \"Haitian Gourde\"\nHUF = \"Hungarian Forint\"\nIDR = \"Indonesian Rupiah\"\nILS = \"Israeli New Sheqel\"\nIMP = \"Manx pound\"\nINR = \"Indian Rupee\"\nIQD = \"Iraqi Dinar\"\nIRR = \"Iranian Rial\"\nISK = \"Icelandic Kr\u00f3na\"\nJEP = \"Jersey Pound\"\nJMD = \"Jamaican Dollar\"\nJOD = \"Jordanian Dinar\"\nJPY = \"Japanese Yen\"\nKES = \"Kenyan Shilling\"\nKGS = \"Kyrgyzstan Som\"\nKHR = \"Cambodian Riel\"\nKMF = \"Comorian Franc\"\nKPW = \"North Korean Won\"\nKRW = \"South Korean Won\"\nKWD = \"Kuwaiti Dinar\"\nKYD = \"Cayman Islands Dollar\"\nKZT = \"Kazakhstani Tenge\"\nLAK = \"Laotian Kip\"\nLBP = \"Lebanese Pound\"\nLKR = \"Sri Lankan Rupee\"\nLRD = \"Liberian Dollar\"\nLSL = \"Lesotho Loti\"\nLTL = \"Lithuanian Litas\"\nLVL = \"Latvian Lats\"\nLYD = \"Libyan Dinar\"\nMAD = \"Moroccan Dirham\"\nMDL = \"Moldovan Leu\"\nMGA = \"Malagasy Ariary\"\nMKD = \"Macedonian Denar\"\nMMK = \"Myanmar Kyat\"\nMNT = \"Mongolian Tugrik\"\nMOP = \"Macanese Pataca\"\nMRO = \"Mauritania Ouguiya\"\nMUR = \"Mauritian Rupee\"\nMVR = \"Maldivian Rufiyaa\"\nMWK = \"Malawi Kwacha\"\nMXN = \"Mexican Peso\"\nMYR = \"Malaysian Ringgit\"\nMZN = \"Mozambican Metical\"\nNAD = \"Namibian Dollar\"\nNGN = \"Nigerian Naira\"\nNIO = \"Nicaraguan C\u00f3rdoba\"\nNOK = \"Norwegian Krone\"\nNPR = \"Nepalese Rupee\"\nNZD = \"New Zealand Dollar\"\nOMR = \"Omani Rial\"\nPAB = \"Panamanian Balboa\"\nPEN = \"Peruvian Nuevo Sol\"\nPGK = \"Papua New Guinean Kina\"\nPHP = \"Philippine Peso\"\nPKR = \"Pakistani Rupee\"\nPLN = \"Polish Zloty\"\nPYG = \"Paraguayan Guarani\"\nQAR = \"Qatari Rial\"\nRON = \"Romanian Leu\"\nRSD = \"Serbian Dinar\"\nRUB = \"Russian Ruble\"\nRWF = \"Rwandan Franc\"\nSAR = \"Saudi Riyal\"\nSBD = \"Solomon Islands Dollar\"\nSCR = \"Seychellois Rupee\"\nSDG = \"Sudanese Pound\"\nSEK = \"Swedish Krona\"\nSGD = \"Singapore Dollar\"\nSHP = \"Saint Helena Pound\"\nSLL = \"Sierra Leonean Leone\"\nSOS = \"Somali Shilling\"\nSRD = \"Surinamese Dollar\"\nSTD = \"S\u00e3o Tom\u00e9 and Pr\u00edncipe Dobra\"\nSVC = \"Salvadoran Col\u00f3n\"\nSYP = \"Syrian Pound\"\nSZL = \"Swazi Lilangeni\"\nTHB = \"Thai Baht\"\nTJS = \"Tajikistan Somoni\"\nTMT = \"Turkmenistan Manat\"\nTND = \"Tunisian Dinar\"\nTOP = \"Tongan Pa\u02bbanga\"\nTRY = \"Turkish Lira\"\nTTD = \"Trinidad and Tobago Dollar\"\nTWD = \"New Taiwan Dollar\"\nTZS = \"Tanzanian Shilling\"\nUAH = \"Ukrainian Hryvnia\"\nUGX = \"Ugandan Shilling\"\nUSD = \"United States Dollar\"\nUYU = \"Uruguayan Peso\"\nUZS = \"Uzbekistan Som\"\nVEF = \"Venezuelan Bol\u00edvar Fuerte\"\nVND = \"Vietnamese Dong\"\nVUV = \"Vanuatu Vatu\"\nWST = \"Samoan Tala\"\nXAF = \"CFA Franc BEAC\"\nXAG = \"Silver (troy ounce)\"\nXAU = \"Gold (troy ounce)\"\nXCD = \"East Caribbean Dollar\"\nXDR = \"Special Drawing Rights\"\nXOF = \"CFA Franc BCEAO\"\nXPF = \"CFP Franc\"\nYER = \"Yemeni Rial\"\nZAR = \"South African Rand\"\nZMK = \"Zambian Kwacha (pre-2013)\"\nZMW = \"Zambian Kwacha\"\nZWL = \"Zimbabwean Dollar\"\n</code></pre>"},{"location":"reference/enums/#src.plisio.enums.Methods","title":"<code>Methods</code>","text":"<p>         Bases: <code>Enum</code></p> <p>Methods.</p> Source code in <code>src/plisio/enums.py</code> <pre><code>class Methods(Enum):\n\"\"\"\n    Methods.\n    \"\"\"\nGET = \"GET\"\nPOST = \"POST\"\nPUT = \"PUT\"\nDELETE = \"DELETE\"\n</code></pre>"},{"location":"reference/enums/#src.plisio.enums.TransactionStatus","title":"<code>TransactionStatus</code>","text":"<p>         Bases: <code>Enum</code></p> <p>Transaction Status.</p> Source code in <code>src/plisio/enums.py</code> <pre><code>class TransactionStatus(Enum):\n\"\"\"\n    Transaction Status.\n    \"\"\"\nNEW = \"new\"\nPENDING = \"pending\"\nPENDING_INTERNAL = \"pending internal\"\nEXPIRED = \"expired\"\nCOMPLETED = \"completed\"\nMISMATCH = \"mismatch\"\nERROR = \"error\"\nCANCELLED = \"cancelled\"\n</code></pre>"},{"location":"reference/enums/#src.plisio.enums.TransactionType","title":"<code>TransactionType</code>","text":"<p>         Bases: <code>Enum</code></p> <p>Transaction Types.</p> Source code in <code>src/plisio/enums.py</code> <pre><code>class TransactionType(Enum):\n\"\"\"\n    Transaction Types.\n    \"\"\"\nCASH_IN = \"cash_in\"\nCASH_OUT = \"cash_out\"\nMASS_CASH_OUT = \"mass_cash_out\"\nINVOICE = \"invoice\"\n</code></pre>"},{"location":"reference/enums/#src.plisio.enums.WithdrawType","title":"<code>WithdrawType</code>","text":"<p>         Bases: <code>Enum</code></p> <p>Withdraw Types.</p> Source code in <code>src/plisio/enums.py</code> <pre><code>class WithdrawType(Enum):\n\"\"\"\n    Withdraw Types.\n    \"\"\"\nCASH_OUT = \"cash_out\"\nMASS_CASH_OUT = \"mass_cash_out\"\n</code></pre>"},{"location":"reference/exceptions/","title":"exceptions","text":"<p>Exceptions for plisio.</p>"},{"location":"reference/exceptions/#src.plisio.exceptions.PlisioAPIException","title":"<code>PlisioAPIException</code>","text":"<p>         Bases: <code>PlisioException</code></p> <p>Plisio Exception.</p> Source code in <code>src/plisio/exceptions.py</code> <pre><code>class PlisioAPIException(PlisioException):\n\"\"\"\n    Plisio Exception.\n    \"\"\"\ndef __init__(self, response: _t.Response, status_code: int, text: str):\n\"\"\"\n        Constructor.\n        Args:\n            response (Response): Response.\n            status_code (int): Status code.\n            text (str): Text.\n        \"\"\"\nself.code = 0\nself.name = \"\"\ntry:\njson_res = _loads(text)\nexcept ValueError:\nself.message = f\"Invalid JSON error message from Plisio: {response.text}\"\nelse:\ndata = json_res[\"data\"]\nself.code = data[\"code\"]\nself.message = data[\"message\"]\nself.name = data[\"name\"]\nself.response = response\nself.status_code = status_code\nself.request = getattr(response, \"request\", None)\ndef __str__(self) -&gt; str:\n\"\"\"\n        String representation.\n        Returns:\n            str: String representation.\n        \"\"\"\nreturn f\"APIError(code={self.code}, name={self.name}): {self.message}\"\n</code></pre>"},{"location":"reference/exceptions/#src.plisio.exceptions.PlisioAPIException.__init__","title":"<code>__init__(response, status_code, text)</code>","text":"<p>Constructor.</p> <p>Parameters:</p> Name Type Description Default <code>response</code> <code>Response</code> <p>Response.</p> required <code>status_code</code> <code>int</code> <p>Status code.</p> required <code>text</code> <code>str</code> <p>Text.</p> required Source code in <code>src/plisio/exceptions.py</code> <pre><code>def __init__(self, response: _t.Response, status_code: int, text: str):\n\"\"\"\n    Constructor.\n    Args:\n        response (Response): Response.\n        status_code (int): Status code.\n        text (str): Text.\n    \"\"\"\nself.code = 0\nself.name = \"\"\ntry:\njson_res = _loads(text)\nexcept ValueError:\nself.message = f\"Invalid JSON error message from Plisio: {response.text}\"\nelse:\ndata = json_res[\"data\"]\nself.code = data[\"code\"]\nself.message = data[\"message\"]\nself.name = data[\"name\"]\nself.response = response\nself.status_code = status_code\nself.request = getattr(response, \"request\", None)\n</code></pre>"},{"location":"reference/exceptions/#src.plisio.exceptions.PlisioAPIException.__str__","title":"<code>__str__()</code>","text":"<p>String representation.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>String representation.</p> Source code in <code>src/plisio/exceptions.py</code> <pre><code>def __str__(self) -&gt; str:\n\"\"\"\n    String representation.\n    Returns:\n        str: String representation.\n    \"\"\"\nreturn f\"APIError(code={self.code}, name={self.name}): {self.message}\"\n</code></pre>"},{"location":"reference/exceptions/#src.plisio.exceptions.PlisioException","title":"<code>PlisioException</code>","text":"<p>         Bases: <code>Exception</code></p> <p>Plisio Exception.</p> Source code in <code>src/plisio/exceptions.py</code> <pre><code>class PlisioException(Exception):\n\"\"\"\n    Plisio Exception.\n    \"\"\"\n</code></pre>"},{"location":"reference/exceptions/#src.plisio.exceptions.PlisioRequestException","title":"<code>PlisioRequestException</code>","text":"<p>         Bases: <code>PlisioException</code></p> <p>Plisio Request Exception.</p> Source code in <code>src/plisio/exceptions.py</code> <pre><code>class PlisioRequestException(PlisioException):\n\"\"\"\n    Plisio Request Exception.\n    \"\"\"\ndef __init__(self, message: str):\n\"\"\"\n        Constructor.\n        Args:\n            message (str): Message.\n        \"\"\"\nself.message = message\ndef __str__(self) -&gt; str:\n\"\"\"\n        String representation.\n        Returns:\n            str: String representation.\n        \"\"\"\nreturn f\"PlisioRequestException: {self.message}\"\n</code></pre>"},{"location":"reference/exceptions/#src.plisio.exceptions.PlisioRequestException.__init__","title":"<code>__init__(message)</code>","text":"<p>Constructor.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str</code> <p>Message.</p> required Source code in <code>src/plisio/exceptions.py</code> <pre><code>def __init__(self, message: str):\n\"\"\"\n    Constructor.\n    Args:\n        message (str): Message.\n    \"\"\"\nself.message = message\n</code></pre>"},{"location":"reference/exceptions/#src.plisio.exceptions.PlisioRequestException.__str__","title":"<code>__str__()</code>","text":"<p>String representation.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>String representation.</p> Source code in <code>src/plisio/exceptions.py</code> <pre><code>def __str__(self) -&gt; str:\n\"\"\"\n    String representation.\n    Returns:\n        str: String representation.\n    \"\"\"\nreturn f\"PlisioRequestException: {self.message}\"\n</code></pre>"},{"location":"reference/utils/","title":"utils","text":"<p>Utils module for plisio.</p>"},{"location":"reference/utils/#src.plisio.utils.to_camel_case","title":"<code>to_camel_case(snake_str)</code>","text":"<p>Convert snake_case to camelCase.</p> Source code in <code>src/plisio/utils.py</code> <pre><code>def to_camel_case(snake_str: str) -&gt; str:\n\"\"\"\n    Convert snake_case to camelCase.\n    \"\"\"\ncomponents = snake_str.split(\"_\")\nreturn components[0] + \"\".join(x.title() for x in components[1:])\n</code></pre>"},{"location":"reference/clients/","title":"clients","text":"<p>Clients for Plisio API.</p> <p>See API Reference for more information.</p> <p>Client - Synchronous client. AsyncClient - Asynchronous client.</p>"},{"location":"reference/clients/#src.plisio.clients.AsyncClient","title":"<code>AsyncClient</code>","text":"<p>         Bases: <code>_BaseClient</code></p> <p>Async client for Plisio API.</p> Source code in <code>src/plisio/clients/async_client.py</code> <pre><code>class AsyncClient(_BaseClient):\n\"\"\"\n    Async client for Plisio API.\n    \"\"\"\ndef _init_session(self) -&gt; _t.AsyncRequestSession:\nheaders = self._get_headers()\nreturn _Session(\nheaders=headers,\n)\nasync def _handle_response(  # type: ignore[override] # pylint: disable=invalid-overridden-method\nself, response: _t.AsyncRequestResponse\n) -&gt; _t.Result:\n\"\"\"\n        Handle response.\n        Args:\n            response (Response): Response.\n        Returns:\n            Response: Response.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nif not 200 &lt;= response.status &lt; 300:\nraise _e.PlisioAPIException(response, response.status, await response.text())\ntry:\ndata: _t.Result = await response.json()\nexcept ValueError as exc:\ntxt: str = await response.text()\nraise _e.PlisioRequestException(f\"Invalid JSON response: {txt}\") from exc\nreturn data\nasync def _request(  # type: ignore[override, no-untyped-def] # pylint: disable=invalid-overridden-method\nself, method: _t.Methods, uri: _t.Text, force_params: bool = False, **kwargs\n) -&gt; _t.Result:\n\"\"\"\n        Make request.\n        Args:\n            method (Methods): Method.\n            uri (str): Path.\n            force_params (bool): Force params.\n            **kwargs: Arguments.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nrequests_kwargs = self._get_request_kwargs(method, force_params, **kwargs)\nasync with getattr(self._session, str(method).lower())(uri, **requests_kwargs) as response:\nreturn await self._handle_response(response)\nasync def _get(  # type: ignore[override, no-untyped-def] # pylint: disable=invalid-overridden-method\nself, path: _t.Text, version: _t.Text = _BaseClient.API_VERSION_V1, **kwargs\n) -&gt; _t.Result:\n\"\"\"\n        Make GET request.\n        Args:\n            path (str): Path.\n            version (str): API version.\n            **kwargs: Arguments.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nuri = self._get_uri(path, version)\nreturn await self._request(_Methods.GET, uri, **kwargs)\nasync def _post(  # type: ignore[override, no-untyped-def] # pylint: disable=invalid-overridden-method\nself, path: _t.Text, version: _t.Text = _BaseClient.API_VERSION_V1, **kwargs\n) -&gt; _t.Result:\n\"\"\"\n        Make POST request.\n        Args:\n            path (str): Path.\n            version (str): API version.\n            **kwargs: Arguments.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nuri = self._get_uri(path, version)\nreturn await self._request(_Methods.POST, uri, **kwargs)\nasync def _put(  # type: ignore[override, no-untyped-def] # pylint: disable=invalid-overridden-method\nself, path: _t.Text, version: _t.Text = _BaseClient.API_VERSION_V1, **kwargs\n) -&gt; _t.Result:\n\"\"\"\n        Make PUT request.\n        Args:\n            path (str): Path.\n            version (str): API version.\n            **kwargs: Arguments.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nuri = self._get_uri(path, version)\nreturn await self._request(_Methods.PUT, uri, **kwargs)\nasync def _delete(  # type: ignore[override, no-untyped-def] # pylint: disable=invalid-overridden-method\nself, path: _t.Text, version: _t.Text = _BaseClient.API_VERSION_V1, **kwargs\n) -&gt; _t.Result:\n\"\"\"\n        Make DELETE request.\n        Args:\n            path (str): Path.\n            version (str): API version.\n            **kwargs: Arguments.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nuri = self._get_uri(path, version)\nreturn await self._request(_Methods.DELETE, uri, **kwargs)\nasync def invoice(  # pylint: disable=too-many-arguments, too-many-locals\nself,\norder_name: _t.Text,\ncurrency: _t.Currencies,\namount: _t.NumberLike,\norder_number: _t.NumberLike,\nsource_currency: _t.OptionalFiats = None,\nsource_amount: _t.OptionalNumberLike = None,\nallowed_psys_cids: _t.OptionalPsysCids = None,\ndescription: _t.OptionalText = None,\ncallback_url: _t.OptionalLink = None,\nsuccess_callback_url: _t.OptionalLink = None,\nfail_callback_url: _t.OptionalLink = None,\nemail: _t.OptionalEmail = None,\nlanguage: _t.OptionalText = \"en_US\",\nplugin: _t.OptionalText = None,\nversion: _t.OptionalText = None,\nredirect_to_invoice: _t.OptionalBool = None,\nexpire_min: _t.OptionalNumberLike = None,\n) -&gt; _t.Result:\n\"\"\"\n        Create invoice.\n        See Also:\n            https://plisio.net/documentation/endpoints/create-an-invoice\n        Args:\n            order_name (str): Order name.\n            order_number (int): Order number.\n            currency (str): Currency.\n            amount (float): Amount.\n            source_currency (str): Source currency.\n            source_amount (float): Source amount.\n            allowed_psys_cids (list): Allowed payment systems.\n            description (str): Description.\n            callback_url (str): Callback URL.\n            success_callback_url (str): Success callback URL.\n            fail_callback_url (str): Fail callback URL.\n            email (str): Email.\n            language (str): Language.\n            plugin (str): Plugin.\n            version (str): Version.\n            redirect_to_invoice (bool): Redirect to invoice.\n            expire_min (int): Expire minutes.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nparams = self._get_params(locals())\nreturn await self._get(\"invoices/new\", data=params, force_params=True)\nasync def transactions(  # pylint: disable=too-many-arguments\nself,\npage: _t.OptionalNumberLike = None,\nlimit: _t.OptionalNumberLike = None,\nshop_id: _t.OptionalNumberLike = None,\ntype: _t.OptionalTransactionStatus = None,  # pylint: disable=redefined-builtin\nstatus: _t.OptionalTransactionStatus = None,\ncurrency: _t.OptionalCurrencies = None,\nsearch: _t.OptionalText = None,\n) -&gt; _t.Result:\n\"\"\"\n        Get transactions.\n        See Also:\n            https://plisio.net/documentation/endpoints/transactions\n        Args:\n            page (int): Page.\n            limit (int): Limit.\n            shop_id (int): Shop ID.\n            type (str): Type.\n            status (str): Status.\n            currency (str): Currency.\n            search (str): Search.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nparams = self._get_params(locals())\nreturn await self._get(\"operations\", data=params, force_params=True)\nasync def withdraw(  # pylint: disable=too-many-arguments\nself,\ncurrency: _t.Currencies,\ntype: _t.WithdrawType,  # pylint: disable=redefined-builtin\nto: _t.Text,  # pylint: disable=invalid-name\namount: _t.NumberLike,\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n        Withdraw.\n        See Also:\n            https://plisio.net/documentation/endpoints/withdrawal-mass-withdrawal\n        Args:\n            currency (str): Currency.\n            type (str): Type.\n            to (str): To.\n            amount (int): Amount.\n            fee_plan (str): Fee plan.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nparams = self._get_params(locals())\nreturn await self._get(\"operations/withdraw\", data=params, force_params=True)\nasync def transaction_details(self, id: _t.Text) -&gt; _t.Result:  # pylint: disable=invalid-name\n\"\"\"\n        Get transaction details.\n        See Also:\n            https://plisio.net/documentation/endpoints/transaction-details\n        Args:\n            id (str): Transaction ID.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nreturn await self._get(f\"operations/{id}\")\nasync def balance(self, psys_cid: _t.OptionalCurrencies = None) -&gt; _t.Result:\n\"\"\"\n        Get balance.\n        See Also:\n            https://plisio.net/documentation/endpoints/balance\n        Args:\n            psys_cid (str): Payment system CID.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nreturn await self._get(\"balance/\", data={\"psys_cid\": psys_cid}, force_params=True)\nasync def fee_plans(self, psys_cid: _t.Currencies) -&gt; _t.Result:\n\"\"\"\n        Get fee plans.\n        See Also:\n            https://plisio.net/documentation/endpoints/fee-plans\n        Args:\n            psys_cid (str): Payment system CID.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nreturn await self._get(f\"operations/fee-plan/{psys_cid}\")\nasync def fee_estimation(\nself,\ncurrency: _t.OptionalCurrencies = None,\naddresses: _t.OptionalListStr = None,\namounts: _t.OptionalListNumberLike = None,\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n        Fee estimation.\n        See Also:\n            https://plisio.net/documentation/endpoints/fee-estimation\n        Args:\n            currency (str): Currency.\n            addresses (list): Addresses\n            amounts (list): Amounts.\n            fee_plan (str): Fee plan.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nparams = self._get_params(locals())\nreturn await self._get(\"operations/fee\", data=params, force_params=True)\nasync def plisio_fee(  # pylint: disable=too-many-arguments\nself,\ncurrency: _t.OptionalCurrencies = None,\naddresses: _t.OptionalListStr = None,\namounts: _t.OptionalListNumberLike = None,\ntype: _t.OptionalTransactionType = None,  # pylint: disable=redefined-builtin\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n        Plisio fee.\n        See Also:\n            https://plisio.net/documentation/endpoints/plisio-fee\n        Args:\n            currency (str): Currency.\n            addresses (list): Addresses\n            amounts (list): Amounts.\n            type (str): Type.\n            fee_plan (str): Fee plan.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nparams = self._get_params(locals())\nreturn await self._get(\"operations/plisio-fee\", data=params, force_params=True)\nasync def crypto_coins(self) -&gt; _t.Result:\n\"\"\"\n        Get crypto coins.\n        See Also:\n            https://plisio.net/documentation/endpoints/crypto-coins\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nreturn await self._get(\"crypto-coins\")\n</code></pre>"},{"location":"reference/clients/#src.plisio.clients.async_client.AsyncClient.balance","title":"<code>balance(psys_cid=None)</code>  <code>async</code>","text":"<p>Get balance.</p> See Also <p>https://plisio.net/documentation/endpoints/balance</p> <p>Parameters:</p> Name Type Description Default <code>psys_cid</code> <code>str</code> <p>Payment system CID.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/async_client.py</code> <pre><code>async def balance(self, psys_cid: _t.OptionalCurrencies = None) -&gt; _t.Result:\n\"\"\"\n    Get balance.\n    See Also:\n        https://plisio.net/documentation/endpoints/balance\n    Args:\n        psys_cid (str): Payment system CID.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nreturn await self._get(\"balance/\", data={\"psys_cid\": psys_cid}, force_params=True)\n</code></pre>"},{"location":"reference/clients/#src.plisio.clients.async_client.AsyncClient.crypto_coins","title":"<code>crypto_coins()</code>  <code>async</code>","text":"<p>Get crypto coins.</p> See Also <p>https://plisio.net/documentation/endpoints/crypto-coins</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/async_client.py</code> <pre><code>async def crypto_coins(self) -&gt; _t.Result:\n\"\"\"\n    Get crypto coins.\n    See Also:\n        https://plisio.net/documentation/endpoints/crypto-coins\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nreturn await self._get(\"crypto-coins\")\n</code></pre>"},{"location":"reference/clients/#src.plisio.clients.async_client.AsyncClient.fee_estimation","title":"<code>fee_estimation(currency=None, addresses=None, amounts=None, fee_plan=None)</code>  <code>async</code>","text":"<p>Fee estimation.</p> See Also <p>https://plisio.net/documentation/endpoints/fee-estimation</p> <p>Parameters:</p> Name Type Description Default <code>currency</code> <code>str</code> <p>Currency.</p> <code>None</code> <code>addresses</code> <code>list</code> <p>Addresses</p> <code>None</code> <code>amounts</code> <code>list</code> <p>Amounts.</p> <code>None</code> <code>fee_plan</code> <code>str</code> <p>Fee plan.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/async_client.py</code> <pre><code>async def fee_estimation(\nself,\ncurrency: _t.OptionalCurrencies = None,\naddresses: _t.OptionalListStr = None,\namounts: _t.OptionalListNumberLike = None,\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n    Fee estimation.\n    See Also:\n        https://plisio.net/documentation/endpoints/fee-estimation\n    Args:\n        currency (str): Currency.\n        addresses (list): Addresses\n        amounts (list): Amounts.\n        fee_plan (str): Fee plan.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nparams = self._get_params(locals())\nreturn await self._get(\"operations/fee\", data=params, force_params=True)\n</code></pre>"},{"location":"reference/clients/#src.plisio.clients.async_client.AsyncClient.fee_plans","title":"<code>fee_plans(psys_cid)</code>  <code>async</code>","text":"<p>Get fee plans.</p> See Also <p>https://plisio.net/documentation/endpoints/fee-plans</p> <p>Parameters:</p> Name Type Description Default <code>psys_cid</code> <code>str</code> <p>Payment system CID.</p> required <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/async_client.py</code> <pre><code>async def fee_plans(self, psys_cid: _t.Currencies) -&gt; _t.Result:\n\"\"\"\n    Get fee plans.\n    See Also:\n        https://plisio.net/documentation/endpoints/fee-plans\n    Args:\n        psys_cid (str): Payment system CID.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nreturn await self._get(f\"operations/fee-plan/{psys_cid}\")\n</code></pre>"},{"location":"reference/clients/#src.plisio.clients.async_client.AsyncClient.invoice","title":"<code>invoice(order_name, currency, amount, order_number, source_currency=None, source_amount=None, allowed_psys_cids=None, description=None, callback_url=None, success_callback_url=None, fail_callback_url=None, email=None, language='en_US', plugin=None, version=None, redirect_to_invoice=None, expire_min=None)</code>  <code>async</code>","text":"<p>Create invoice.</p> See Also <p>https://plisio.net/documentation/endpoints/create-an-invoice</p> <p>Parameters:</p> Name Type Description Default <code>order_name</code> <code>str</code> <p>Order name.</p> required <code>order_number</code> <code>int</code> <p>Order number.</p> required <code>currency</code> <code>str</code> <p>Currency.</p> required <code>amount</code> <code>float</code> <p>Amount.</p> required <code>source_currency</code> <code>str</code> <p>Source currency.</p> <code>None</code> <code>source_amount</code> <code>float</code> <p>Source amount.</p> <code>None</code> <code>allowed_psys_cids</code> <code>list</code> <p>Allowed payment systems.</p> <code>None</code> <code>description</code> <code>str</code> <p>Description.</p> <code>None</code> <code>callback_url</code> <code>str</code> <p>Callback URL.</p> <code>None</code> <code>success_callback_url</code> <code>str</code> <p>Success callback URL.</p> <code>None</code> <code>fail_callback_url</code> <code>str</code> <p>Fail callback URL.</p> <code>None</code> <code>email</code> <code>str</code> <p>Email.</p> <code>None</code> <code>language</code> <code>str</code> <p>Language.</p> <code>'en_US'</code> <code>plugin</code> <code>str</code> <p>Plugin.</p> <code>None</code> <code>version</code> <code>str</code> <p>Version.</p> <code>None</code> <code>redirect_to_invoice</code> <code>bool</code> <p>Redirect to invoice.</p> <code>None</code> <code>expire_min</code> <code>int</code> <p>Expire minutes.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/async_client.py</code> <pre><code>async def invoice(  # pylint: disable=too-many-arguments, too-many-locals\nself,\norder_name: _t.Text,\ncurrency: _t.Currencies,\namount: _t.NumberLike,\norder_number: _t.NumberLike,\nsource_currency: _t.OptionalFiats = None,\nsource_amount: _t.OptionalNumberLike = None,\nallowed_psys_cids: _t.OptionalPsysCids = None,\ndescription: _t.OptionalText = None,\ncallback_url: _t.OptionalLink = None,\nsuccess_callback_url: _t.OptionalLink = None,\nfail_callback_url: _t.OptionalLink = None,\nemail: _t.OptionalEmail = None,\nlanguage: _t.OptionalText = \"en_US\",\nplugin: _t.OptionalText = None,\nversion: _t.OptionalText = None,\nredirect_to_invoice: _t.OptionalBool = None,\nexpire_min: _t.OptionalNumberLike = None,\n) -&gt; _t.Result:\n\"\"\"\n    Create invoice.\n    See Also:\n        https://plisio.net/documentation/endpoints/create-an-invoice\n    Args:\n        order_name (str): Order name.\n        order_number (int): Order number.\n        currency (str): Currency.\n        amount (float): Amount.\n        source_currency (str): Source currency.\n        source_amount (float): Source amount.\n        allowed_psys_cids (list): Allowed payment systems.\n        description (str): Description.\n        callback_url (str): Callback URL.\n        success_callback_url (str): Success callback URL.\n        fail_callback_url (str): Fail callback URL.\n        email (str): Email.\n        language (str): Language.\n        plugin (str): Plugin.\n        version (str): Version.\n        redirect_to_invoice (bool): Redirect to invoice.\n        expire_min (int): Expire minutes.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nparams = self._get_params(locals())\nreturn await self._get(\"invoices/new\", data=params, force_params=True)\n</code></pre>"},{"location":"reference/clients/#src.plisio.clients.async_client.AsyncClient.plisio_fee","title":"<code>plisio_fee(currency=None, addresses=None, amounts=None, type=None, fee_plan=None)</code>  <code>async</code>","text":"<p>Plisio fee.</p> See Also <p>https://plisio.net/documentation/endpoints/plisio-fee</p> <p>Parameters:</p> Name Type Description Default <code>currency</code> <code>str</code> <p>Currency.</p> <code>None</code> <code>addresses</code> <code>list</code> <p>Addresses</p> <code>None</code> <code>amounts</code> <code>list</code> <p>Amounts.</p> <code>None</code> <code>type</code> <code>str</code> <p>Type.</p> <code>None</code> <code>fee_plan</code> <code>str</code> <p>Fee plan.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/async_client.py</code> <pre><code>async def plisio_fee(  # pylint: disable=too-many-arguments\nself,\ncurrency: _t.OptionalCurrencies = None,\naddresses: _t.OptionalListStr = None,\namounts: _t.OptionalListNumberLike = None,\ntype: _t.OptionalTransactionType = None,  # pylint: disable=redefined-builtin\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n    Plisio fee.\n    See Also:\n        https://plisio.net/documentation/endpoints/plisio-fee\n    Args:\n        currency (str): Currency.\n        addresses (list): Addresses\n        amounts (list): Amounts.\n        type (str): Type.\n        fee_plan (str): Fee plan.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nparams = self._get_params(locals())\nreturn await self._get(\"operations/plisio-fee\", data=params, force_params=True)\n</code></pre>"},{"location":"reference/clients/#src.plisio.clients.async_client.AsyncClient.transaction_details","title":"<code>transaction_details(id)</code>  <code>async</code>","text":"<p>Get transaction details.</p> See Also <p>https://plisio.net/documentation/endpoints/transaction-details</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>Transaction ID.</p> required <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/async_client.py</code> <pre><code>async def transaction_details(self, id: _t.Text) -&gt; _t.Result:  # pylint: disable=invalid-name\n\"\"\"\n    Get transaction details.\n    See Also:\n        https://plisio.net/documentation/endpoints/transaction-details\n    Args:\n        id (str): Transaction ID.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nreturn await self._get(f\"operations/{id}\")\n</code></pre>"},{"location":"reference/clients/#src.plisio.clients.async_client.AsyncClient.transactions","title":"<code>transactions(page=None, limit=None, shop_id=None, type=None, status=None, currency=None, search=None)</code>  <code>async</code>","text":"<p>Get transactions.</p> See Also <p>https://plisio.net/documentation/endpoints/transactions</p> <p>Parameters:</p> Name Type Description Default <code>page</code> <code>int</code> <p>Page.</p> <code>None</code> <code>limit</code> <code>int</code> <p>Limit.</p> <code>None</code> <code>shop_id</code> <code>int</code> <p>Shop ID.</p> <code>None</code> <code>type</code> <code>str</code> <p>Type.</p> <code>None</code> <code>status</code> <code>str</code> <p>Status.</p> <code>None</code> <code>currency</code> <code>str</code> <p>Currency.</p> <code>None</code> <code>search</code> <code>str</code> <p>Search.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/async_client.py</code> <pre><code>async def transactions(  # pylint: disable=too-many-arguments\nself,\npage: _t.OptionalNumberLike = None,\nlimit: _t.OptionalNumberLike = None,\nshop_id: _t.OptionalNumberLike = None,\ntype: _t.OptionalTransactionStatus = None,  # pylint: disable=redefined-builtin\nstatus: _t.OptionalTransactionStatus = None,\ncurrency: _t.OptionalCurrencies = None,\nsearch: _t.OptionalText = None,\n) -&gt; _t.Result:\n\"\"\"\n    Get transactions.\n    See Also:\n        https://plisio.net/documentation/endpoints/transactions\n    Args:\n        page (int): Page.\n        limit (int): Limit.\n        shop_id (int): Shop ID.\n        type (str): Type.\n        status (str): Status.\n        currency (str): Currency.\n        search (str): Search.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nparams = self._get_params(locals())\nreturn await self._get(\"operations\", data=params, force_params=True)\n</code></pre>"},{"location":"reference/clients/#src.plisio.clients.async_client.AsyncClient.withdraw","title":"<code>withdraw(currency, type, to, amount, fee_plan=None)</code>  <code>async</code>","text":"<p>Withdraw.</p> See Also <p>https://plisio.net/documentation/endpoints/withdrawal-mass-withdrawal</p> <p>Parameters:</p> Name Type Description Default <code>currency</code> <code>str</code> <p>Currency.</p> required <code>type</code> <code>str</code> <p>Type.</p> required <code>to</code> <code>str</code> <p>To.</p> required <code>amount</code> <code>int</code> <p>Amount.</p> required <code>fee_plan</code> <code>str</code> <p>Fee plan.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/async_client.py</code> <pre><code>async def withdraw(  # pylint: disable=too-many-arguments\nself,\ncurrency: _t.Currencies,\ntype: _t.WithdrawType,  # pylint: disable=redefined-builtin\nto: _t.Text,  # pylint: disable=invalid-name\namount: _t.NumberLike,\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n    Withdraw.\n    See Also:\n        https://plisio.net/documentation/endpoints/withdrawal-mass-withdrawal\n    Args:\n        currency (str): Currency.\n        type (str): Type.\n        to (str): To.\n        amount (int): Amount.\n        fee_plan (str): Fee plan.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nparams = self._get_params(locals())\nreturn await self._get(\"operations/withdraw\", data=params, force_params=True)\n</code></pre>"},{"location":"reference/clients/#src.plisio.clients.Client","title":"<code>Client</code>","text":"<p>         Bases: <code>_BaseClient</code></p> <p>Async client for Plisio API.</p> Source code in <code>src/plisio/clients/client.py</code> <pre><code>class Client(_BaseClient):\n\"\"\"\n    Async client for Plisio API.\n    \"\"\"\ndef _init_session(self) -&gt; _t.SyncRequestSession:\n\"\"\"\n        Initialize session.\n        Returns:\n            Session: Session.\n        \"\"\"\nsession = _requests.Session()\nheaders = self._get_headers()\nsession.headers.update(headers)\nreturn session\ndef _handle_response(self, response: _t.SyncRequestResponse) -&gt; _t.Result:  # type: ignore[override]\n\"\"\"\n        Handle response.\n        Args:\n            response (Response): Response.\n        Returns:\n            Response: Response.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nif not 200 &lt;= response.status_code &lt; 300:\nraise _e.PlisioAPIException(response, response.status_code, response.text)\ntry:\ndata: _t.Result = response.json()\nexcept ValueError as exc:\ntxt: str = response.text\nraise _e.PlisioRequestException(f\"Invalid JSON response: {txt}\") from exc\nreturn data\ndef _request(  # type: ignore[no-untyped-def]\nself, method: _t.Methods, uri: _t.Text, force_params: bool = False, **kwargs  # type: ignore[no-untyped-def]\n) -&gt; _t.Result:\n\"\"\"\n        Make request.\n        Args:\n            method (Methods): Method.\n            uri (str): Path.\n            force_params (bool): Force params.\n            **kwargs: Arguments.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nrequests_kwargs = self._get_request_kwargs(method, force_params, **kwargs)\nresponse = getattr(self._session, str(method).lower())(uri, **requests_kwargs)\nreturn self._handle_response(response)\ndef _get(  # type: ignore[no-untyped-def]\nself, path: _t.Text, version: _t.Text = _BaseClient.API_VERSION_V1, **kwargs\n) -&gt; _t.Result:\n\"\"\"\n        Make GET request.\n        Args:\n            path (str): Path.\n            version (str): API version.\n            **kwargs: Arguments.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nuri = self._get_uri(path, version)\nreturn self._request(_Methods.GET, uri, **kwargs)\ndef _post(  # type: ignore[no-untyped-def]\nself, path: _t.Text, version: _t.Text = _BaseClient.API_VERSION_V1, **kwargs\n) -&gt; _t.Result:\n\"\"\"\n        Make POST request.\n        Args:\n            path (str): Path.\n            version (str): API version.\n            **kwargs: Arguments.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nuri = self._get_uri(path, version)\nreturn self._request(_Methods.POST, uri, **kwargs)\ndef _put(  # type: ignore[no-untyped-def]\nself, path: _t.Text, version: _t.Text = _BaseClient.API_VERSION_V1, **kwargs\n) -&gt; _t.Result:\n\"\"\"\n        Make PUT request.\n        Args:\n            path (str): Path.\n            version (str): API version.\n            **kwargs: Arguments.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nuri = self._get_uri(path, version)\nreturn self._request(_Methods.PUT, uri, **kwargs)\ndef _delete(  # type: ignore[no-untyped-def]\nself, path: _t.Text, version: _t.Text = _BaseClient.API_VERSION_V1, **kwargs\n) -&gt; _t.Result:\n\"\"\"\n        Make DELETE request.\n        Args:\n            path (str): Path.\n            version (str): API version.\n            **kwargs: Arguments.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nuri = self._get_uri(path, version)\nreturn self._request(_Methods.DELETE, uri, **kwargs)\ndef invoice(  # pylint: disable=too-many-arguments, too-many-locals\nself,\norder_name: _t.Text,\ncurrency: _t.Currencies,\namount: _t.NumberLike,\norder_number: _t.NumberLike = str(_uuid4()),\nsource_currency: _t.OptionalFiats = None,\nsource_amount: _t.OptionalNumberLike = None,\nallowed_psys_cids: _t.OptionalPsysCids = None,\ndescription: _t.OptionalText = None,\ncallback_url: _t.OptionalLink = None,\nsuccess_callback_url: _t.OptionalLink = None,\nfail_callback_url: _t.OptionalLink = None,\nemail: _t.OptionalEmail = None,\nlanguage: _t.OptionalText = \"en_US\",\nplugin: _t.OptionalText = None,\nversion: _t.OptionalText = None,\nredirect_to_invoice: _t.OptionalBool = None,\nexpire_min: _t.OptionalNumberLike = None,\n) -&gt; _t.Result:\n\"\"\"\n        Create invoice.\n        See Also:\n            https://plisio.net/documentation/endpoints/create-an-invoice\n        Args:\n            order_name (str): Order name.\n            order_number (int): Order number.\n            currency (str): Currency.\n            amount (float): Amount.\n            source_currency (str): Source currency.\n            source_amount (float): Source amount.\n            allowed_psys_cids (list): Allowed payment systems.\n            description (str): Description.\n            callback_url (str): Callback URL.\n            success_callback_url (str): Success callback URL.\n            fail_callback_url (str): Fail callback URL.\n            email (str): Email.\n            language (str): Language.\n            plugin (str): Plugin.\n            version (str): Version.\n            redirect_to_invoice (bool): Redirect to invoice.\n            expire_min (int): Expire minutes.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nparams = self._get_params(locals())\nreturn self._get(\"invoices/new\", data=params, force_params=True)\ndef transactions(  # pylint: disable=too-many-arguments\nself,\npage: _t.OptionalNumberLike = None,\nlimit: _t.OptionalNumberLike = None,\nshop_id: _t.OptionalNumberLike = None,\ntype: _t.OptionalTransactionStatus = None,  # pylint: disable=redefined-builtin\nstatus: _t.OptionalTransactionStatus = None,\ncurrency: _t.OptionalCurrencies = None,\nsearch: _t.OptionalText = None,\n) -&gt; _t.Result:\n\"\"\"\n        Get transactions.\n        See Also:\n            https://plisio.net/documentation/endpoints/transactions\n        Args:\n            page (int): Page.\n            limit (int): Limit.\n            shop_id (int): Shop ID.\n            type (str): Type.\n            status (str): Status.\n            currency (str): Currency.\n            search (str): Search.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nparams = self._get_params(locals())\nreturn self._get(\"operations\", data=params, force_params=True)\ndef withdraw(  # pylint: disable=too-many-arguments\nself,\ncurrency: _t.Currencies,\ntype: _t.WithdrawType,  # pylint: disable=redefined-builtin\nto: _t.Text,  # pylint: disable=invalid-name\namount: _t.NumberLike,\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n        Withdraw.\n        See Also:\n            https://plisio.net/documentation/endpoints/withdrawal-mass-withdrawal\n        Args:\n            currency (str): Currency.\n            type (str): Type.\n            to (str): To.\n            amount (int): Amount.\n            fee_plan (str): Fee plan.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nparams = self._get_params(locals())\nreturn self._get(\"operations/withdraw\", data=params, force_params=True)\ndef transaction_details(self, id: _t.Text) -&gt; _t.Result:  # pylint: disable=invalid-name\n\"\"\"\n        Get transaction details.\n        See Also:\n            https://plisio.net/documentation/endpoints/transaction-details\n        Args:\n            id (str): Transaction ID.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nreturn self._get(\"operations\", data={\"id\": id}, force_params=True)\ndef balance(self, psys_cid: _t.OptionalCurrencies = None) -&gt; _t.Result:\n\"\"\"\n        Get balance.\n        See Also:\n            https://plisio.net/documentation/endpoints/balance\n        Args:\n            psys_cid (str): Payment system CID.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nreturn self._get(\"balance\", data={\"psys_cid\": psys_cid}, force_params=True)\ndef fee_plans(self, psys_cid: _t.Currencies) -&gt; _t.Result:\n\"\"\"\n        Get fee plans.\n        See Also:\n            https://plisio.net/documentation/endpoints/fee-plans\n        Args:\n            psys_cid (str): Payment system CID.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nreturn self._get(\"operations/fee-plan\", data={\"psys_cid\": psys_cid}, force_params=True)\nasync def fee_estimation(\nself,\ncurrency: _t.OptionalCurrencies = None,\naddresses: _t.OptionalListStr = None,\namounts: _t.OptionalListNumberLike = None,\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n        Fee estimation.\n        See Also:\n            https://plisio.net/documentation/endpoints/fee-estimation\n        Args:\n            currency (str): Currency.\n            addresses (list): Addresses\n            amounts (list): Amounts.\n            fee_plan (str): Fee plan.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nparams = self._get_params(locals())\nreturn self._get(\"operations/fee\", data=params, force_params=True)\ndef plisio_fee(  # pylint: disable=too-many-arguments\nself,\ncurrency: _t.OptionalCurrencies = None,\naddresses: _t.OptionalListStr = None,\namounts: _t.OptionalListNumberLike = None,\ntype: _t.OptionalTransactionType = None,  # pylint: disable=redefined-builtin\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n        Plisio fee.\n        See Also:\n            https://plisio.net/documentation/endpoints/plisio-fee\n        Args:\n            currency (str): Currency.\n            addresses (list): Addresses\n            amounts (list): Amounts.\n            type (str): Type.\n            fee_plan (str): Fee plan.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nparams = self._get_params(locals())\nreturn self._get(\"operations/plisio-fee\", data=params, force_params=True)\ndef crypto_coins(self) -&gt; _t.Result:\n\"\"\"\n        Get crypto coins.\n        See Also:\n            https://plisio.net/documentation/endpoints/crypto-coins\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nreturn self._get(\"crypto-coins\")\n</code></pre>"},{"location":"reference/clients/#src.plisio.clients.client.Client.balance","title":"<code>balance(psys_cid=None)</code>","text":"<p>Get balance.</p> See Also <p>https://plisio.net/documentation/endpoints/balance</p> <p>Parameters:</p> Name Type Description Default <code>psys_cid</code> <code>str</code> <p>Payment system CID.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/client.py</code> <pre><code>def balance(self, psys_cid: _t.OptionalCurrencies = None) -&gt; _t.Result:\n\"\"\"\n    Get balance.\n    See Also:\n        https://plisio.net/documentation/endpoints/balance\n    Args:\n        psys_cid (str): Payment system CID.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nreturn self._get(\"balance\", data={\"psys_cid\": psys_cid}, force_params=True)\n</code></pre>"},{"location":"reference/clients/#src.plisio.clients.client.Client.crypto_coins","title":"<code>crypto_coins()</code>","text":"<p>Get crypto coins.</p> See Also <p>https://plisio.net/documentation/endpoints/crypto-coins</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/client.py</code> <pre><code>def crypto_coins(self) -&gt; _t.Result:\n\"\"\"\n    Get crypto coins.\n    See Also:\n        https://plisio.net/documentation/endpoints/crypto-coins\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nreturn self._get(\"crypto-coins\")\n</code></pre>"},{"location":"reference/clients/#src.plisio.clients.client.Client.fee_estimation","title":"<code>fee_estimation(currency=None, addresses=None, amounts=None, fee_plan=None)</code>  <code>async</code>","text":"<p>Fee estimation.</p> See Also <p>https://plisio.net/documentation/endpoints/fee-estimation</p> <p>Parameters:</p> Name Type Description Default <code>currency</code> <code>str</code> <p>Currency.</p> <code>None</code> <code>addresses</code> <code>list</code> <p>Addresses</p> <code>None</code> <code>amounts</code> <code>list</code> <p>Amounts.</p> <code>None</code> <code>fee_plan</code> <code>str</code> <p>Fee plan.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/client.py</code> <pre><code>async def fee_estimation(\nself,\ncurrency: _t.OptionalCurrencies = None,\naddresses: _t.OptionalListStr = None,\namounts: _t.OptionalListNumberLike = None,\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n    Fee estimation.\n    See Also:\n        https://plisio.net/documentation/endpoints/fee-estimation\n    Args:\n        currency (str): Currency.\n        addresses (list): Addresses\n        amounts (list): Amounts.\n        fee_plan (str): Fee plan.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nparams = self._get_params(locals())\nreturn self._get(\"operations/fee\", data=params, force_params=True)\n</code></pre>"},{"location":"reference/clients/#src.plisio.clients.client.Client.fee_plans","title":"<code>fee_plans(psys_cid)</code>","text":"<p>Get fee plans.</p> See Also <p>https://plisio.net/documentation/endpoints/fee-plans</p> <p>Parameters:</p> Name Type Description Default <code>psys_cid</code> <code>str</code> <p>Payment system CID.</p> required <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/client.py</code> <pre><code>def fee_plans(self, psys_cid: _t.Currencies) -&gt; _t.Result:\n\"\"\"\n    Get fee plans.\n    See Also:\n        https://plisio.net/documentation/endpoints/fee-plans\n    Args:\n        psys_cid (str): Payment system CID.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nreturn self._get(\"operations/fee-plan\", data={\"psys_cid\": psys_cid}, force_params=True)\n</code></pre>"},{"location":"reference/clients/#src.plisio.clients.client.Client.invoice","title":"<code>invoice(order_name, currency, amount, order_number=str(_uuid4()), source_currency=None, source_amount=None, allowed_psys_cids=None, description=None, callback_url=None, success_callback_url=None, fail_callback_url=None, email=None, language='en_US', plugin=None, version=None, redirect_to_invoice=None, expire_min=None)</code>","text":"<p>Create invoice.</p> See Also <p>https://plisio.net/documentation/endpoints/create-an-invoice</p> <p>Parameters:</p> Name Type Description Default <code>order_name</code> <code>str</code> <p>Order name.</p> required <code>order_number</code> <code>int</code> <p>Order number.</p> <code>str(_uuid4())</code> <code>currency</code> <code>str</code> <p>Currency.</p> required <code>amount</code> <code>float</code> <p>Amount.</p> required <code>source_currency</code> <code>str</code> <p>Source currency.</p> <code>None</code> <code>source_amount</code> <code>float</code> <p>Source amount.</p> <code>None</code> <code>allowed_psys_cids</code> <code>list</code> <p>Allowed payment systems.</p> <code>None</code> <code>description</code> <code>str</code> <p>Description.</p> <code>None</code> <code>callback_url</code> <code>str</code> <p>Callback URL.</p> <code>None</code> <code>success_callback_url</code> <code>str</code> <p>Success callback URL.</p> <code>None</code> <code>fail_callback_url</code> <code>str</code> <p>Fail callback URL.</p> <code>None</code> <code>email</code> <code>str</code> <p>Email.</p> <code>None</code> <code>language</code> <code>str</code> <p>Language.</p> <code>'en_US'</code> <code>plugin</code> <code>str</code> <p>Plugin.</p> <code>None</code> <code>version</code> <code>str</code> <p>Version.</p> <code>None</code> <code>redirect_to_invoice</code> <code>bool</code> <p>Redirect to invoice.</p> <code>None</code> <code>expire_min</code> <code>int</code> <p>Expire minutes.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/client.py</code> <pre><code>def invoice(  # pylint: disable=too-many-arguments, too-many-locals\nself,\norder_name: _t.Text,\ncurrency: _t.Currencies,\namount: _t.NumberLike,\norder_number: _t.NumberLike = str(_uuid4()),\nsource_currency: _t.OptionalFiats = None,\nsource_amount: _t.OptionalNumberLike = None,\nallowed_psys_cids: _t.OptionalPsysCids = None,\ndescription: _t.OptionalText = None,\ncallback_url: _t.OptionalLink = None,\nsuccess_callback_url: _t.OptionalLink = None,\nfail_callback_url: _t.OptionalLink = None,\nemail: _t.OptionalEmail = None,\nlanguage: _t.OptionalText = \"en_US\",\nplugin: _t.OptionalText = None,\nversion: _t.OptionalText = None,\nredirect_to_invoice: _t.OptionalBool = None,\nexpire_min: _t.OptionalNumberLike = None,\n) -&gt; _t.Result:\n\"\"\"\n    Create invoice.\n    See Also:\n        https://plisio.net/documentation/endpoints/create-an-invoice\n    Args:\n        order_name (str): Order name.\n        order_number (int): Order number.\n        currency (str): Currency.\n        amount (float): Amount.\n        source_currency (str): Source currency.\n        source_amount (float): Source amount.\n        allowed_psys_cids (list): Allowed payment systems.\n        description (str): Description.\n        callback_url (str): Callback URL.\n        success_callback_url (str): Success callback URL.\n        fail_callback_url (str): Fail callback URL.\n        email (str): Email.\n        language (str): Language.\n        plugin (str): Plugin.\n        version (str): Version.\n        redirect_to_invoice (bool): Redirect to invoice.\n        expire_min (int): Expire minutes.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nparams = self._get_params(locals())\nreturn self._get(\"invoices/new\", data=params, force_params=True)\n</code></pre>"},{"location":"reference/clients/#src.plisio.clients.client.Client.plisio_fee","title":"<code>plisio_fee(currency=None, addresses=None, amounts=None, type=None, fee_plan=None)</code>","text":"<p>Plisio fee.</p> See Also <p>https://plisio.net/documentation/endpoints/plisio-fee</p> <p>Parameters:</p> Name Type Description Default <code>currency</code> <code>str</code> <p>Currency.</p> <code>None</code> <code>addresses</code> <code>list</code> <p>Addresses</p> <code>None</code> <code>amounts</code> <code>list</code> <p>Amounts.</p> <code>None</code> <code>type</code> <code>str</code> <p>Type.</p> <code>None</code> <code>fee_plan</code> <code>str</code> <p>Fee plan.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/client.py</code> <pre><code>def plisio_fee(  # pylint: disable=too-many-arguments\nself,\ncurrency: _t.OptionalCurrencies = None,\naddresses: _t.OptionalListStr = None,\namounts: _t.OptionalListNumberLike = None,\ntype: _t.OptionalTransactionType = None,  # pylint: disable=redefined-builtin\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n    Plisio fee.\n    See Also:\n        https://plisio.net/documentation/endpoints/plisio-fee\n    Args:\n        currency (str): Currency.\n        addresses (list): Addresses\n        amounts (list): Amounts.\n        type (str): Type.\n        fee_plan (str): Fee plan.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nparams = self._get_params(locals())\nreturn self._get(\"operations/plisio-fee\", data=params, force_params=True)\n</code></pre>"},{"location":"reference/clients/#src.plisio.clients.client.Client.transaction_details","title":"<code>transaction_details(id)</code>","text":"<p>Get transaction details.</p> See Also <p>https://plisio.net/documentation/endpoints/transaction-details</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>Transaction ID.</p> required <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/client.py</code> <pre><code>def transaction_details(self, id: _t.Text) -&gt; _t.Result:  # pylint: disable=invalid-name\n\"\"\"\n    Get transaction details.\n    See Also:\n        https://plisio.net/documentation/endpoints/transaction-details\n    Args:\n        id (str): Transaction ID.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nreturn self._get(\"operations\", data={\"id\": id}, force_params=True)\n</code></pre>"},{"location":"reference/clients/#src.plisio.clients.client.Client.transactions","title":"<code>transactions(page=None, limit=None, shop_id=None, type=None, status=None, currency=None, search=None)</code>","text":"<p>Get transactions.</p> See Also <p>https://plisio.net/documentation/endpoints/transactions</p> <p>Parameters:</p> Name Type Description Default <code>page</code> <code>int</code> <p>Page.</p> <code>None</code> <code>limit</code> <code>int</code> <p>Limit.</p> <code>None</code> <code>shop_id</code> <code>int</code> <p>Shop ID.</p> <code>None</code> <code>type</code> <code>str</code> <p>Type.</p> <code>None</code> <code>status</code> <code>str</code> <p>Status.</p> <code>None</code> <code>currency</code> <code>str</code> <p>Currency.</p> <code>None</code> <code>search</code> <code>str</code> <p>Search.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/client.py</code> <pre><code>def transactions(  # pylint: disable=too-many-arguments\nself,\npage: _t.OptionalNumberLike = None,\nlimit: _t.OptionalNumberLike = None,\nshop_id: _t.OptionalNumberLike = None,\ntype: _t.OptionalTransactionStatus = None,  # pylint: disable=redefined-builtin\nstatus: _t.OptionalTransactionStatus = None,\ncurrency: _t.OptionalCurrencies = None,\nsearch: _t.OptionalText = None,\n) -&gt; _t.Result:\n\"\"\"\n    Get transactions.\n    See Also:\n        https://plisio.net/documentation/endpoints/transactions\n    Args:\n        page (int): Page.\n        limit (int): Limit.\n        shop_id (int): Shop ID.\n        type (str): Type.\n        status (str): Status.\n        currency (str): Currency.\n        search (str): Search.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nparams = self._get_params(locals())\nreturn self._get(\"operations\", data=params, force_params=True)\n</code></pre>"},{"location":"reference/clients/#src.plisio.clients.client.Client.withdraw","title":"<code>withdraw(currency, type, to, amount, fee_plan=None)</code>","text":"<p>Withdraw.</p> See Also <p>https://plisio.net/documentation/endpoints/withdrawal-mass-withdrawal</p> <p>Parameters:</p> Name Type Description Default <code>currency</code> <code>str</code> <p>Currency.</p> required <code>type</code> <code>str</code> <p>Type.</p> required <code>to</code> <code>str</code> <p>To.</p> required <code>amount</code> <code>int</code> <p>Amount.</p> required <code>fee_plan</code> <code>str</code> <p>Fee plan.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/client.py</code> <pre><code>def withdraw(  # pylint: disable=too-many-arguments\nself,\ncurrency: _t.Currencies,\ntype: _t.WithdrawType,  # pylint: disable=redefined-builtin\nto: _t.Text,  # pylint: disable=invalid-name\namount: _t.NumberLike,\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n    Withdraw.\n    See Also:\n        https://plisio.net/documentation/endpoints/withdrawal-mass-withdrawal\n    Args:\n        currency (str): Currency.\n        type (str): Type.\n        to (str): To.\n        amount (int): Amount.\n        fee_plan (str): Fee plan.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nparams = self._get_params(locals())\nreturn self._get(\"operations/withdraw\", data=params, force_params=True)\n</code></pre>"},{"location":"reference/clients/async_client/","title":"async_client","text":"<p>Async client for Plisio API.</p>"},{"location":"reference/clients/async_client/#src.plisio.clients.async_client.AsyncClient","title":"<code>AsyncClient</code>","text":"<p>         Bases: <code>_BaseClient</code></p> <p>Async client for Plisio API.</p> Source code in <code>src/plisio/clients/async_client.py</code> <pre><code>class AsyncClient(_BaseClient):\n\"\"\"\n    Async client for Plisio API.\n    \"\"\"\ndef _init_session(self) -&gt; _t.AsyncRequestSession:\nheaders = self._get_headers()\nreturn _Session(\nheaders=headers,\n)\nasync def _handle_response(  # type: ignore[override] # pylint: disable=invalid-overridden-method\nself, response: _t.AsyncRequestResponse\n) -&gt; _t.Result:\n\"\"\"\n        Handle response.\n        Args:\n            response (Response): Response.\n        Returns:\n            Response: Response.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nif not 200 &lt;= response.status &lt; 300:\nraise _e.PlisioAPIException(response, response.status, await response.text())\ntry:\ndata: _t.Result = await response.json()\nexcept ValueError as exc:\ntxt: str = await response.text()\nraise _e.PlisioRequestException(f\"Invalid JSON response: {txt}\") from exc\nreturn data\nasync def _request(  # type: ignore[override, no-untyped-def] # pylint: disable=invalid-overridden-method\nself, method: _t.Methods, uri: _t.Text, force_params: bool = False, **kwargs\n) -&gt; _t.Result:\n\"\"\"\n        Make request.\n        Args:\n            method (Methods): Method.\n            uri (str): Path.\n            force_params (bool): Force params.\n            **kwargs: Arguments.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nrequests_kwargs = self._get_request_kwargs(method, force_params, **kwargs)\nasync with getattr(self._session, str(method).lower())(uri, **requests_kwargs) as response:\nreturn await self._handle_response(response)\nasync def _get(  # type: ignore[override, no-untyped-def] # pylint: disable=invalid-overridden-method\nself, path: _t.Text, version: _t.Text = _BaseClient.API_VERSION_V1, **kwargs\n) -&gt; _t.Result:\n\"\"\"\n        Make GET request.\n        Args:\n            path (str): Path.\n            version (str): API version.\n            **kwargs: Arguments.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nuri = self._get_uri(path, version)\nreturn await self._request(_Methods.GET, uri, **kwargs)\nasync def _post(  # type: ignore[override, no-untyped-def] # pylint: disable=invalid-overridden-method\nself, path: _t.Text, version: _t.Text = _BaseClient.API_VERSION_V1, **kwargs\n) -&gt; _t.Result:\n\"\"\"\n        Make POST request.\n        Args:\n            path (str): Path.\n            version (str): API version.\n            **kwargs: Arguments.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nuri = self._get_uri(path, version)\nreturn await self._request(_Methods.POST, uri, **kwargs)\nasync def _put(  # type: ignore[override, no-untyped-def] # pylint: disable=invalid-overridden-method\nself, path: _t.Text, version: _t.Text = _BaseClient.API_VERSION_V1, **kwargs\n) -&gt; _t.Result:\n\"\"\"\n        Make PUT request.\n        Args:\n            path (str): Path.\n            version (str): API version.\n            **kwargs: Arguments.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nuri = self._get_uri(path, version)\nreturn await self._request(_Methods.PUT, uri, **kwargs)\nasync def _delete(  # type: ignore[override, no-untyped-def] # pylint: disable=invalid-overridden-method\nself, path: _t.Text, version: _t.Text = _BaseClient.API_VERSION_V1, **kwargs\n) -&gt; _t.Result:\n\"\"\"\n        Make DELETE request.\n        Args:\n            path (str): Path.\n            version (str): API version.\n            **kwargs: Arguments.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nuri = self._get_uri(path, version)\nreturn await self._request(_Methods.DELETE, uri, **kwargs)\nasync def invoice(  # pylint: disable=too-many-arguments, too-many-locals\nself,\norder_name: _t.Text,\ncurrency: _t.Currencies,\namount: _t.NumberLike,\norder_number: _t.NumberLike,\nsource_currency: _t.OptionalFiats = None,\nsource_amount: _t.OptionalNumberLike = None,\nallowed_psys_cids: _t.OptionalPsysCids = None,\ndescription: _t.OptionalText = None,\ncallback_url: _t.OptionalLink = None,\nsuccess_callback_url: _t.OptionalLink = None,\nfail_callback_url: _t.OptionalLink = None,\nemail: _t.OptionalEmail = None,\nlanguage: _t.OptionalText = \"en_US\",\nplugin: _t.OptionalText = None,\nversion: _t.OptionalText = None,\nredirect_to_invoice: _t.OptionalBool = None,\nexpire_min: _t.OptionalNumberLike = None,\n) -&gt; _t.Result:\n\"\"\"\n        Create invoice.\n        See Also:\n            https://plisio.net/documentation/endpoints/create-an-invoice\n        Args:\n            order_name (str): Order name.\n            order_number (int): Order number.\n            currency (str): Currency.\n            amount (float): Amount.\n            source_currency (str): Source currency.\n            source_amount (float): Source amount.\n            allowed_psys_cids (list): Allowed payment systems.\n            description (str): Description.\n            callback_url (str): Callback URL.\n            success_callback_url (str): Success callback URL.\n            fail_callback_url (str): Fail callback URL.\n            email (str): Email.\n            language (str): Language.\n            plugin (str): Plugin.\n            version (str): Version.\n            redirect_to_invoice (bool): Redirect to invoice.\n            expire_min (int): Expire minutes.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nparams = self._get_params(locals())\nreturn await self._get(\"invoices/new\", data=params, force_params=True)\nasync def transactions(  # pylint: disable=too-many-arguments\nself,\npage: _t.OptionalNumberLike = None,\nlimit: _t.OptionalNumberLike = None,\nshop_id: _t.OptionalNumberLike = None,\ntype: _t.OptionalTransactionStatus = None,  # pylint: disable=redefined-builtin\nstatus: _t.OptionalTransactionStatus = None,\ncurrency: _t.OptionalCurrencies = None,\nsearch: _t.OptionalText = None,\n) -&gt; _t.Result:\n\"\"\"\n        Get transactions.\n        See Also:\n            https://plisio.net/documentation/endpoints/transactions\n        Args:\n            page (int): Page.\n            limit (int): Limit.\n            shop_id (int): Shop ID.\n            type (str): Type.\n            status (str): Status.\n            currency (str): Currency.\n            search (str): Search.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nparams = self._get_params(locals())\nreturn await self._get(\"operations\", data=params, force_params=True)\nasync def withdraw(  # pylint: disable=too-many-arguments\nself,\ncurrency: _t.Currencies,\ntype: _t.WithdrawType,  # pylint: disable=redefined-builtin\nto: _t.Text,  # pylint: disable=invalid-name\namount: _t.NumberLike,\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n        Withdraw.\n        See Also:\n            https://plisio.net/documentation/endpoints/withdrawal-mass-withdrawal\n        Args:\n            currency (str): Currency.\n            type (str): Type.\n            to (str): To.\n            amount (int): Amount.\n            fee_plan (str): Fee plan.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nparams = self._get_params(locals())\nreturn await self._get(\"operations/withdraw\", data=params, force_params=True)\nasync def transaction_details(self, id: _t.Text) -&gt; _t.Result:  # pylint: disable=invalid-name\n\"\"\"\n        Get transaction details.\n        See Also:\n            https://plisio.net/documentation/endpoints/transaction-details\n        Args:\n            id (str): Transaction ID.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nreturn await self._get(f\"operations/{id}\")\nasync def balance(self, psys_cid: _t.OptionalCurrencies = None) -&gt; _t.Result:\n\"\"\"\n        Get balance.\n        See Also:\n            https://plisio.net/documentation/endpoints/balance\n        Args:\n            psys_cid (str): Payment system CID.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nreturn await self._get(\"balance/\", data={\"psys_cid\": psys_cid}, force_params=True)\nasync def fee_plans(self, psys_cid: _t.Currencies) -&gt; _t.Result:\n\"\"\"\n        Get fee plans.\n        See Also:\n            https://plisio.net/documentation/endpoints/fee-plans\n        Args:\n            psys_cid (str): Payment system CID.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nreturn await self._get(f\"operations/fee-plan/{psys_cid}\")\nasync def fee_estimation(\nself,\ncurrency: _t.OptionalCurrencies = None,\naddresses: _t.OptionalListStr = None,\namounts: _t.OptionalListNumberLike = None,\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n        Fee estimation.\n        See Also:\n            https://plisio.net/documentation/endpoints/fee-estimation\n        Args:\n            currency (str): Currency.\n            addresses (list): Addresses\n            amounts (list): Amounts.\n            fee_plan (str): Fee plan.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nparams = self._get_params(locals())\nreturn await self._get(\"operations/fee\", data=params, force_params=True)\nasync def plisio_fee(  # pylint: disable=too-many-arguments\nself,\ncurrency: _t.OptionalCurrencies = None,\naddresses: _t.OptionalListStr = None,\namounts: _t.OptionalListNumberLike = None,\ntype: _t.OptionalTransactionType = None,  # pylint: disable=redefined-builtin\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n        Plisio fee.\n        See Also:\n            https://plisio.net/documentation/endpoints/plisio-fee\n        Args:\n            currency (str): Currency.\n            addresses (list): Addresses\n            amounts (list): Amounts.\n            type (str): Type.\n            fee_plan (str): Fee plan.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nparams = self._get_params(locals())\nreturn await self._get(\"operations/plisio-fee\", data=params, force_params=True)\nasync def crypto_coins(self) -&gt; _t.Result:\n\"\"\"\n        Get crypto coins.\n        See Also:\n            https://plisio.net/documentation/endpoints/crypto-coins\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nreturn await self._get(\"crypto-coins\")\n</code></pre>"},{"location":"reference/clients/async_client/#src.plisio.clients.async_client.AsyncClient.balance","title":"<code>balance(psys_cid=None)</code>  <code>async</code>","text":"<p>Get balance.</p> See Also <p>https://plisio.net/documentation/endpoints/balance</p> <p>Parameters:</p> Name Type Description Default <code>psys_cid</code> <code>str</code> <p>Payment system CID.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/async_client.py</code> <pre><code>async def balance(self, psys_cid: _t.OptionalCurrencies = None) -&gt; _t.Result:\n\"\"\"\n    Get balance.\n    See Also:\n        https://plisio.net/documentation/endpoints/balance\n    Args:\n        psys_cid (str): Payment system CID.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nreturn await self._get(\"balance/\", data={\"psys_cid\": psys_cid}, force_params=True)\n</code></pre>"},{"location":"reference/clients/async_client/#src.plisio.clients.async_client.AsyncClient.crypto_coins","title":"<code>crypto_coins()</code>  <code>async</code>","text":"<p>Get crypto coins.</p> See Also <p>https://plisio.net/documentation/endpoints/crypto-coins</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/async_client.py</code> <pre><code>async def crypto_coins(self) -&gt; _t.Result:\n\"\"\"\n    Get crypto coins.\n    See Also:\n        https://plisio.net/documentation/endpoints/crypto-coins\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nreturn await self._get(\"crypto-coins\")\n</code></pre>"},{"location":"reference/clients/async_client/#src.plisio.clients.async_client.AsyncClient.fee_estimation","title":"<code>fee_estimation(currency=None, addresses=None, amounts=None, fee_plan=None)</code>  <code>async</code>","text":"<p>Fee estimation.</p> See Also <p>https://plisio.net/documentation/endpoints/fee-estimation</p> <p>Parameters:</p> Name Type Description Default <code>currency</code> <code>str</code> <p>Currency.</p> <code>None</code> <code>addresses</code> <code>list</code> <p>Addresses</p> <code>None</code> <code>amounts</code> <code>list</code> <p>Amounts.</p> <code>None</code> <code>fee_plan</code> <code>str</code> <p>Fee plan.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/async_client.py</code> <pre><code>async def fee_estimation(\nself,\ncurrency: _t.OptionalCurrencies = None,\naddresses: _t.OptionalListStr = None,\namounts: _t.OptionalListNumberLike = None,\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n    Fee estimation.\n    See Also:\n        https://plisio.net/documentation/endpoints/fee-estimation\n    Args:\n        currency (str): Currency.\n        addresses (list): Addresses\n        amounts (list): Amounts.\n        fee_plan (str): Fee plan.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nparams = self._get_params(locals())\nreturn await self._get(\"operations/fee\", data=params, force_params=True)\n</code></pre>"},{"location":"reference/clients/async_client/#src.plisio.clients.async_client.AsyncClient.fee_plans","title":"<code>fee_plans(psys_cid)</code>  <code>async</code>","text":"<p>Get fee plans.</p> See Also <p>https://plisio.net/documentation/endpoints/fee-plans</p> <p>Parameters:</p> Name Type Description Default <code>psys_cid</code> <code>str</code> <p>Payment system CID.</p> required <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/async_client.py</code> <pre><code>async def fee_plans(self, psys_cid: _t.Currencies) -&gt; _t.Result:\n\"\"\"\n    Get fee plans.\n    See Also:\n        https://plisio.net/documentation/endpoints/fee-plans\n    Args:\n        psys_cid (str): Payment system CID.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nreturn await self._get(f\"operations/fee-plan/{psys_cid}\")\n</code></pre>"},{"location":"reference/clients/async_client/#src.plisio.clients.async_client.AsyncClient.invoice","title":"<code>invoice(order_name, currency, amount, order_number, source_currency=None, source_amount=None, allowed_psys_cids=None, description=None, callback_url=None, success_callback_url=None, fail_callback_url=None, email=None, language='en_US', plugin=None, version=None, redirect_to_invoice=None, expire_min=None)</code>  <code>async</code>","text":"<p>Create invoice.</p> See Also <p>https://plisio.net/documentation/endpoints/create-an-invoice</p> <p>Parameters:</p> Name Type Description Default <code>order_name</code> <code>str</code> <p>Order name.</p> required <code>order_number</code> <code>int</code> <p>Order number.</p> required <code>currency</code> <code>str</code> <p>Currency.</p> required <code>amount</code> <code>float</code> <p>Amount.</p> required <code>source_currency</code> <code>str</code> <p>Source currency.</p> <code>None</code> <code>source_amount</code> <code>float</code> <p>Source amount.</p> <code>None</code> <code>allowed_psys_cids</code> <code>list</code> <p>Allowed payment systems.</p> <code>None</code> <code>description</code> <code>str</code> <p>Description.</p> <code>None</code> <code>callback_url</code> <code>str</code> <p>Callback URL.</p> <code>None</code> <code>success_callback_url</code> <code>str</code> <p>Success callback URL.</p> <code>None</code> <code>fail_callback_url</code> <code>str</code> <p>Fail callback URL.</p> <code>None</code> <code>email</code> <code>str</code> <p>Email.</p> <code>None</code> <code>language</code> <code>str</code> <p>Language.</p> <code>'en_US'</code> <code>plugin</code> <code>str</code> <p>Plugin.</p> <code>None</code> <code>version</code> <code>str</code> <p>Version.</p> <code>None</code> <code>redirect_to_invoice</code> <code>bool</code> <p>Redirect to invoice.</p> <code>None</code> <code>expire_min</code> <code>int</code> <p>Expire minutes.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/async_client.py</code> <pre><code>async def invoice(  # pylint: disable=too-many-arguments, too-many-locals\nself,\norder_name: _t.Text,\ncurrency: _t.Currencies,\namount: _t.NumberLike,\norder_number: _t.NumberLike,\nsource_currency: _t.OptionalFiats = None,\nsource_amount: _t.OptionalNumberLike = None,\nallowed_psys_cids: _t.OptionalPsysCids = None,\ndescription: _t.OptionalText = None,\ncallback_url: _t.OptionalLink = None,\nsuccess_callback_url: _t.OptionalLink = None,\nfail_callback_url: _t.OptionalLink = None,\nemail: _t.OptionalEmail = None,\nlanguage: _t.OptionalText = \"en_US\",\nplugin: _t.OptionalText = None,\nversion: _t.OptionalText = None,\nredirect_to_invoice: _t.OptionalBool = None,\nexpire_min: _t.OptionalNumberLike = None,\n) -&gt; _t.Result:\n\"\"\"\n    Create invoice.\n    See Also:\n        https://plisio.net/documentation/endpoints/create-an-invoice\n    Args:\n        order_name (str): Order name.\n        order_number (int): Order number.\n        currency (str): Currency.\n        amount (float): Amount.\n        source_currency (str): Source currency.\n        source_amount (float): Source amount.\n        allowed_psys_cids (list): Allowed payment systems.\n        description (str): Description.\n        callback_url (str): Callback URL.\n        success_callback_url (str): Success callback URL.\n        fail_callback_url (str): Fail callback URL.\n        email (str): Email.\n        language (str): Language.\n        plugin (str): Plugin.\n        version (str): Version.\n        redirect_to_invoice (bool): Redirect to invoice.\n        expire_min (int): Expire minutes.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nparams = self._get_params(locals())\nreturn await self._get(\"invoices/new\", data=params, force_params=True)\n</code></pre>"},{"location":"reference/clients/async_client/#src.plisio.clients.async_client.AsyncClient.plisio_fee","title":"<code>plisio_fee(currency=None, addresses=None, amounts=None, type=None, fee_plan=None)</code>  <code>async</code>","text":"<p>Plisio fee.</p> See Also <p>https://plisio.net/documentation/endpoints/plisio-fee</p> <p>Parameters:</p> Name Type Description Default <code>currency</code> <code>str</code> <p>Currency.</p> <code>None</code> <code>addresses</code> <code>list</code> <p>Addresses</p> <code>None</code> <code>amounts</code> <code>list</code> <p>Amounts.</p> <code>None</code> <code>type</code> <code>str</code> <p>Type.</p> <code>None</code> <code>fee_plan</code> <code>str</code> <p>Fee plan.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/async_client.py</code> <pre><code>async def plisio_fee(  # pylint: disable=too-many-arguments\nself,\ncurrency: _t.OptionalCurrencies = None,\naddresses: _t.OptionalListStr = None,\namounts: _t.OptionalListNumberLike = None,\ntype: _t.OptionalTransactionType = None,  # pylint: disable=redefined-builtin\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n    Plisio fee.\n    See Also:\n        https://plisio.net/documentation/endpoints/plisio-fee\n    Args:\n        currency (str): Currency.\n        addresses (list): Addresses\n        amounts (list): Amounts.\n        type (str): Type.\n        fee_plan (str): Fee plan.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nparams = self._get_params(locals())\nreturn await self._get(\"operations/plisio-fee\", data=params, force_params=True)\n</code></pre>"},{"location":"reference/clients/async_client/#src.plisio.clients.async_client.AsyncClient.transaction_details","title":"<code>transaction_details(id)</code>  <code>async</code>","text":"<p>Get transaction details.</p> See Also <p>https://plisio.net/documentation/endpoints/transaction-details</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>Transaction ID.</p> required <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/async_client.py</code> <pre><code>async def transaction_details(self, id: _t.Text) -&gt; _t.Result:  # pylint: disable=invalid-name\n\"\"\"\n    Get transaction details.\n    See Also:\n        https://plisio.net/documentation/endpoints/transaction-details\n    Args:\n        id (str): Transaction ID.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nreturn await self._get(f\"operations/{id}\")\n</code></pre>"},{"location":"reference/clients/async_client/#src.plisio.clients.async_client.AsyncClient.transactions","title":"<code>transactions(page=None, limit=None, shop_id=None, type=None, status=None, currency=None, search=None)</code>  <code>async</code>","text":"<p>Get transactions.</p> See Also <p>https://plisio.net/documentation/endpoints/transactions</p> <p>Parameters:</p> Name Type Description Default <code>page</code> <code>int</code> <p>Page.</p> <code>None</code> <code>limit</code> <code>int</code> <p>Limit.</p> <code>None</code> <code>shop_id</code> <code>int</code> <p>Shop ID.</p> <code>None</code> <code>type</code> <code>str</code> <p>Type.</p> <code>None</code> <code>status</code> <code>str</code> <p>Status.</p> <code>None</code> <code>currency</code> <code>str</code> <p>Currency.</p> <code>None</code> <code>search</code> <code>str</code> <p>Search.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/async_client.py</code> <pre><code>async def transactions(  # pylint: disable=too-many-arguments\nself,\npage: _t.OptionalNumberLike = None,\nlimit: _t.OptionalNumberLike = None,\nshop_id: _t.OptionalNumberLike = None,\ntype: _t.OptionalTransactionStatus = None,  # pylint: disable=redefined-builtin\nstatus: _t.OptionalTransactionStatus = None,\ncurrency: _t.OptionalCurrencies = None,\nsearch: _t.OptionalText = None,\n) -&gt; _t.Result:\n\"\"\"\n    Get transactions.\n    See Also:\n        https://plisio.net/documentation/endpoints/transactions\n    Args:\n        page (int): Page.\n        limit (int): Limit.\n        shop_id (int): Shop ID.\n        type (str): Type.\n        status (str): Status.\n        currency (str): Currency.\n        search (str): Search.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nparams = self._get_params(locals())\nreturn await self._get(\"operations\", data=params, force_params=True)\n</code></pre>"},{"location":"reference/clients/async_client/#src.plisio.clients.async_client.AsyncClient.withdraw","title":"<code>withdraw(currency, type, to, amount, fee_plan=None)</code>  <code>async</code>","text":"<p>Withdraw.</p> See Also <p>https://plisio.net/documentation/endpoints/withdrawal-mass-withdrawal</p> <p>Parameters:</p> Name Type Description Default <code>currency</code> <code>str</code> <p>Currency.</p> required <code>type</code> <code>str</code> <p>Type.</p> required <code>to</code> <code>str</code> <p>To.</p> required <code>amount</code> <code>int</code> <p>Amount.</p> required <code>fee_plan</code> <code>str</code> <p>Fee plan.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/async_client.py</code> <pre><code>async def withdraw(  # pylint: disable=too-many-arguments\nself,\ncurrency: _t.Currencies,\ntype: _t.WithdrawType,  # pylint: disable=redefined-builtin\nto: _t.Text,  # pylint: disable=invalid-name\namount: _t.NumberLike,\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n    Withdraw.\n    See Also:\n        https://plisio.net/documentation/endpoints/withdrawal-mass-withdrawal\n    Args:\n        currency (str): Currency.\n        type (str): Type.\n        to (str): To.\n        amount (int): Amount.\n        fee_plan (str): Fee plan.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nparams = self._get_params(locals())\nreturn await self._get(\"operations/withdraw\", data=params, force_params=True)\n</code></pre>"},{"location":"reference/clients/client/","title":"client","text":"<p>Async client for Plisio API.</p>"},{"location":"reference/clients/client/#src.plisio.clients.client.Client","title":"<code>Client</code>","text":"<p>         Bases: <code>_BaseClient</code></p> <p>Async client for Plisio API.</p> Source code in <code>src/plisio/clients/client.py</code> <pre><code>class Client(_BaseClient):\n\"\"\"\n    Async client for Plisio API.\n    \"\"\"\ndef _init_session(self) -&gt; _t.SyncRequestSession:\n\"\"\"\n        Initialize session.\n        Returns:\n            Session: Session.\n        \"\"\"\nsession = _requests.Session()\nheaders = self._get_headers()\nsession.headers.update(headers)\nreturn session\ndef _handle_response(self, response: _t.SyncRequestResponse) -&gt; _t.Result:  # type: ignore[override]\n\"\"\"\n        Handle response.\n        Args:\n            response (Response): Response.\n        Returns:\n            Response: Response.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nif not 200 &lt;= response.status_code &lt; 300:\nraise _e.PlisioAPIException(response, response.status_code, response.text)\ntry:\ndata: _t.Result = response.json()\nexcept ValueError as exc:\ntxt: str = response.text\nraise _e.PlisioRequestException(f\"Invalid JSON response: {txt}\") from exc\nreturn data\ndef _request(  # type: ignore[no-untyped-def]\nself, method: _t.Methods, uri: _t.Text, force_params: bool = False, **kwargs  # type: ignore[no-untyped-def]\n) -&gt; _t.Result:\n\"\"\"\n        Make request.\n        Args:\n            method (Methods): Method.\n            uri (str): Path.\n            force_params (bool): Force params.\n            **kwargs: Arguments.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nrequests_kwargs = self._get_request_kwargs(method, force_params, **kwargs)\nresponse = getattr(self._session, str(method).lower())(uri, **requests_kwargs)\nreturn self._handle_response(response)\ndef _get(  # type: ignore[no-untyped-def]\nself, path: _t.Text, version: _t.Text = _BaseClient.API_VERSION_V1, **kwargs\n) -&gt; _t.Result:\n\"\"\"\n        Make GET request.\n        Args:\n            path (str): Path.\n            version (str): API version.\n            **kwargs: Arguments.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nuri = self._get_uri(path, version)\nreturn self._request(_Methods.GET, uri, **kwargs)\ndef _post(  # type: ignore[no-untyped-def]\nself, path: _t.Text, version: _t.Text = _BaseClient.API_VERSION_V1, **kwargs\n) -&gt; _t.Result:\n\"\"\"\n        Make POST request.\n        Args:\n            path (str): Path.\n            version (str): API version.\n            **kwargs: Arguments.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nuri = self._get_uri(path, version)\nreturn self._request(_Methods.POST, uri, **kwargs)\ndef _put(  # type: ignore[no-untyped-def]\nself, path: _t.Text, version: _t.Text = _BaseClient.API_VERSION_V1, **kwargs\n) -&gt; _t.Result:\n\"\"\"\n        Make PUT request.\n        Args:\n            path (str): Path.\n            version (str): API version.\n            **kwargs: Arguments.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nuri = self._get_uri(path, version)\nreturn self._request(_Methods.PUT, uri, **kwargs)\ndef _delete(  # type: ignore[no-untyped-def]\nself, path: _t.Text, version: _t.Text = _BaseClient.API_VERSION_V1, **kwargs\n) -&gt; _t.Result:\n\"\"\"\n        Make DELETE request.\n        Args:\n            path (str): Path.\n            version (str): API version.\n            **kwargs: Arguments.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nuri = self._get_uri(path, version)\nreturn self._request(_Methods.DELETE, uri, **kwargs)\ndef invoice(  # pylint: disable=too-many-arguments, too-many-locals\nself,\norder_name: _t.Text,\ncurrency: _t.Currencies,\namount: _t.NumberLike,\norder_number: _t.NumberLike = str(_uuid4()),\nsource_currency: _t.OptionalFiats = None,\nsource_amount: _t.OptionalNumberLike = None,\nallowed_psys_cids: _t.OptionalPsysCids = None,\ndescription: _t.OptionalText = None,\ncallback_url: _t.OptionalLink = None,\nsuccess_callback_url: _t.OptionalLink = None,\nfail_callback_url: _t.OptionalLink = None,\nemail: _t.OptionalEmail = None,\nlanguage: _t.OptionalText = \"en_US\",\nplugin: _t.OptionalText = None,\nversion: _t.OptionalText = None,\nredirect_to_invoice: _t.OptionalBool = None,\nexpire_min: _t.OptionalNumberLike = None,\n) -&gt; _t.Result:\n\"\"\"\n        Create invoice.\n        See Also:\n            https://plisio.net/documentation/endpoints/create-an-invoice\n        Args:\n            order_name (str): Order name.\n            order_number (int): Order number.\n            currency (str): Currency.\n            amount (float): Amount.\n            source_currency (str): Source currency.\n            source_amount (float): Source amount.\n            allowed_psys_cids (list): Allowed payment systems.\n            description (str): Description.\n            callback_url (str): Callback URL.\n            success_callback_url (str): Success callback URL.\n            fail_callback_url (str): Fail callback URL.\n            email (str): Email.\n            language (str): Language.\n            plugin (str): Plugin.\n            version (str): Version.\n            redirect_to_invoice (bool): Redirect to invoice.\n            expire_min (int): Expire minutes.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nparams = self._get_params(locals())\nreturn self._get(\"invoices/new\", data=params, force_params=True)\ndef transactions(  # pylint: disable=too-many-arguments\nself,\npage: _t.OptionalNumberLike = None,\nlimit: _t.OptionalNumberLike = None,\nshop_id: _t.OptionalNumberLike = None,\ntype: _t.OptionalTransactionStatus = None,  # pylint: disable=redefined-builtin\nstatus: _t.OptionalTransactionStatus = None,\ncurrency: _t.OptionalCurrencies = None,\nsearch: _t.OptionalText = None,\n) -&gt; _t.Result:\n\"\"\"\n        Get transactions.\n        See Also:\n            https://plisio.net/documentation/endpoints/transactions\n        Args:\n            page (int): Page.\n            limit (int): Limit.\n            shop_id (int): Shop ID.\n            type (str): Type.\n            status (str): Status.\n            currency (str): Currency.\n            search (str): Search.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nparams = self._get_params(locals())\nreturn self._get(\"operations\", data=params, force_params=True)\ndef withdraw(  # pylint: disable=too-many-arguments\nself,\ncurrency: _t.Currencies,\ntype: _t.WithdrawType,  # pylint: disable=redefined-builtin\nto: _t.Text,  # pylint: disable=invalid-name\namount: _t.NumberLike,\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n        Withdraw.\n        See Also:\n            https://plisio.net/documentation/endpoints/withdrawal-mass-withdrawal\n        Args:\n            currency (str): Currency.\n            type (str): Type.\n            to (str): To.\n            amount (int): Amount.\n            fee_plan (str): Fee plan.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nparams = self._get_params(locals())\nreturn self._get(\"operations/withdraw\", data=params, force_params=True)\ndef transaction_details(self, id: _t.Text) -&gt; _t.Result:  # pylint: disable=invalid-name\n\"\"\"\n        Get transaction details.\n        See Also:\n            https://plisio.net/documentation/endpoints/transaction-details\n        Args:\n            id (str): Transaction ID.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nreturn self._get(\"operations\", data={\"id\": id}, force_params=True)\ndef balance(self, psys_cid: _t.OptionalCurrencies = None) -&gt; _t.Result:\n\"\"\"\n        Get balance.\n        See Also:\n            https://plisio.net/documentation/endpoints/balance\n        Args:\n            psys_cid (str): Payment system CID.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nreturn self._get(\"balance\", data={\"psys_cid\": psys_cid}, force_params=True)\ndef fee_plans(self, psys_cid: _t.Currencies) -&gt; _t.Result:\n\"\"\"\n        Get fee plans.\n        See Also:\n            https://plisio.net/documentation/endpoints/fee-plans\n        Args:\n            psys_cid (str): Payment system CID.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nreturn self._get(\"operations/fee-plan\", data={\"psys_cid\": psys_cid}, force_params=True)\nasync def fee_estimation(\nself,\ncurrency: _t.OptionalCurrencies = None,\naddresses: _t.OptionalListStr = None,\namounts: _t.OptionalListNumberLike = None,\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n        Fee estimation.\n        See Also:\n            https://plisio.net/documentation/endpoints/fee-estimation\n        Args:\n            currency (str): Currency.\n            addresses (list): Addresses\n            amounts (list): Amounts.\n            fee_plan (str): Fee plan.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nparams = self._get_params(locals())\nreturn self._get(\"operations/fee\", data=params, force_params=True)\ndef plisio_fee(  # pylint: disable=too-many-arguments\nself,\ncurrency: _t.OptionalCurrencies = None,\naddresses: _t.OptionalListStr = None,\namounts: _t.OptionalListNumberLike = None,\ntype: _t.OptionalTransactionType = None,  # pylint: disable=redefined-builtin\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n        Plisio fee.\n        See Also:\n            https://plisio.net/documentation/endpoints/plisio-fee\n        Args:\n            currency (str): Currency.\n            addresses (list): Addresses\n            amounts (list): Amounts.\n            type (str): Type.\n            fee_plan (str): Fee plan.\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nparams = self._get_params(locals())\nreturn self._get(\"operations/plisio-fee\", data=params, force_params=True)\ndef crypto_coins(self) -&gt; _t.Result:\n\"\"\"\n        Get crypto coins.\n        See Also:\n            https://plisio.net/documentation/endpoints/crypto-coins\n        Returns:\n            dict: Response data.\n        Raises:\n            PlisioRequestException: If request failed.\n            PlisioAPIException: If API returned error.\n        \"\"\"\nreturn self._get(\"crypto-coins\")\n</code></pre>"},{"location":"reference/clients/client/#src.plisio.clients.client.Client.balance","title":"<code>balance(psys_cid=None)</code>","text":"<p>Get balance.</p> See Also <p>https://plisio.net/documentation/endpoints/balance</p> <p>Parameters:</p> Name Type Description Default <code>psys_cid</code> <code>str</code> <p>Payment system CID.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/client.py</code> <pre><code>def balance(self, psys_cid: _t.OptionalCurrencies = None) -&gt; _t.Result:\n\"\"\"\n    Get balance.\n    See Also:\n        https://plisio.net/documentation/endpoints/balance\n    Args:\n        psys_cid (str): Payment system CID.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nreturn self._get(\"balance\", data={\"psys_cid\": psys_cid}, force_params=True)\n</code></pre>"},{"location":"reference/clients/client/#src.plisio.clients.client.Client.crypto_coins","title":"<code>crypto_coins()</code>","text":"<p>Get crypto coins.</p> See Also <p>https://plisio.net/documentation/endpoints/crypto-coins</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/client.py</code> <pre><code>def crypto_coins(self) -&gt; _t.Result:\n\"\"\"\n    Get crypto coins.\n    See Also:\n        https://plisio.net/documentation/endpoints/crypto-coins\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nreturn self._get(\"crypto-coins\")\n</code></pre>"},{"location":"reference/clients/client/#src.plisio.clients.client.Client.fee_estimation","title":"<code>fee_estimation(currency=None, addresses=None, amounts=None, fee_plan=None)</code>  <code>async</code>","text":"<p>Fee estimation.</p> See Also <p>https://plisio.net/documentation/endpoints/fee-estimation</p> <p>Parameters:</p> Name Type Description Default <code>currency</code> <code>str</code> <p>Currency.</p> <code>None</code> <code>addresses</code> <code>list</code> <p>Addresses</p> <code>None</code> <code>amounts</code> <code>list</code> <p>Amounts.</p> <code>None</code> <code>fee_plan</code> <code>str</code> <p>Fee plan.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/client.py</code> <pre><code>async def fee_estimation(\nself,\ncurrency: _t.OptionalCurrencies = None,\naddresses: _t.OptionalListStr = None,\namounts: _t.OptionalListNumberLike = None,\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n    Fee estimation.\n    See Also:\n        https://plisio.net/documentation/endpoints/fee-estimation\n    Args:\n        currency (str): Currency.\n        addresses (list): Addresses\n        amounts (list): Amounts.\n        fee_plan (str): Fee plan.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nparams = self._get_params(locals())\nreturn self._get(\"operations/fee\", data=params, force_params=True)\n</code></pre>"},{"location":"reference/clients/client/#src.plisio.clients.client.Client.fee_plans","title":"<code>fee_plans(psys_cid)</code>","text":"<p>Get fee plans.</p> See Also <p>https://plisio.net/documentation/endpoints/fee-plans</p> <p>Parameters:</p> Name Type Description Default <code>psys_cid</code> <code>str</code> <p>Payment system CID.</p> required <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/client.py</code> <pre><code>def fee_plans(self, psys_cid: _t.Currencies) -&gt; _t.Result:\n\"\"\"\n    Get fee plans.\n    See Also:\n        https://plisio.net/documentation/endpoints/fee-plans\n    Args:\n        psys_cid (str): Payment system CID.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nreturn self._get(\"operations/fee-plan\", data={\"psys_cid\": psys_cid}, force_params=True)\n</code></pre>"},{"location":"reference/clients/client/#src.plisio.clients.client.Client.invoice","title":"<code>invoice(order_name, currency, amount, order_number=str(_uuid4()), source_currency=None, source_amount=None, allowed_psys_cids=None, description=None, callback_url=None, success_callback_url=None, fail_callback_url=None, email=None, language='en_US', plugin=None, version=None, redirect_to_invoice=None, expire_min=None)</code>","text":"<p>Create invoice.</p> See Also <p>https://plisio.net/documentation/endpoints/create-an-invoice</p> <p>Parameters:</p> Name Type Description Default <code>order_name</code> <code>str</code> <p>Order name.</p> required <code>order_number</code> <code>int</code> <p>Order number.</p> <code>str(_uuid4())</code> <code>currency</code> <code>str</code> <p>Currency.</p> required <code>amount</code> <code>float</code> <p>Amount.</p> required <code>source_currency</code> <code>str</code> <p>Source currency.</p> <code>None</code> <code>source_amount</code> <code>float</code> <p>Source amount.</p> <code>None</code> <code>allowed_psys_cids</code> <code>list</code> <p>Allowed payment systems.</p> <code>None</code> <code>description</code> <code>str</code> <p>Description.</p> <code>None</code> <code>callback_url</code> <code>str</code> <p>Callback URL.</p> <code>None</code> <code>success_callback_url</code> <code>str</code> <p>Success callback URL.</p> <code>None</code> <code>fail_callback_url</code> <code>str</code> <p>Fail callback URL.</p> <code>None</code> <code>email</code> <code>str</code> <p>Email.</p> <code>None</code> <code>language</code> <code>str</code> <p>Language.</p> <code>'en_US'</code> <code>plugin</code> <code>str</code> <p>Plugin.</p> <code>None</code> <code>version</code> <code>str</code> <p>Version.</p> <code>None</code> <code>redirect_to_invoice</code> <code>bool</code> <p>Redirect to invoice.</p> <code>None</code> <code>expire_min</code> <code>int</code> <p>Expire minutes.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/client.py</code> <pre><code>def invoice(  # pylint: disable=too-many-arguments, too-many-locals\nself,\norder_name: _t.Text,\ncurrency: _t.Currencies,\namount: _t.NumberLike,\norder_number: _t.NumberLike = str(_uuid4()),\nsource_currency: _t.OptionalFiats = None,\nsource_amount: _t.OptionalNumberLike = None,\nallowed_psys_cids: _t.OptionalPsysCids = None,\ndescription: _t.OptionalText = None,\ncallback_url: _t.OptionalLink = None,\nsuccess_callback_url: _t.OptionalLink = None,\nfail_callback_url: _t.OptionalLink = None,\nemail: _t.OptionalEmail = None,\nlanguage: _t.OptionalText = \"en_US\",\nplugin: _t.OptionalText = None,\nversion: _t.OptionalText = None,\nredirect_to_invoice: _t.OptionalBool = None,\nexpire_min: _t.OptionalNumberLike = None,\n) -&gt; _t.Result:\n\"\"\"\n    Create invoice.\n    See Also:\n        https://plisio.net/documentation/endpoints/create-an-invoice\n    Args:\n        order_name (str): Order name.\n        order_number (int): Order number.\n        currency (str): Currency.\n        amount (float): Amount.\n        source_currency (str): Source currency.\n        source_amount (float): Source amount.\n        allowed_psys_cids (list): Allowed payment systems.\n        description (str): Description.\n        callback_url (str): Callback URL.\n        success_callback_url (str): Success callback URL.\n        fail_callback_url (str): Fail callback URL.\n        email (str): Email.\n        language (str): Language.\n        plugin (str): Plugin.\n        version (str): Version.\n        redirect_to_invoice (bool): Redirect to invoice.\n        expire_min (int): Expire minutes.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nparams = self._get_params(locals())\nreturn self._get(\"invoices/new\", data=params, force_params=True)\n</code></pre>"},{"location":"reference/clients/client/#src.plisio.clients.client.Client.plisio_fee","title":"<code>plisio_fee(currency=None, addresses=None, amounts=None, type=None, fee_plan=None)</code>","text":"<p>Plisio fee.</p> See Also <p>https://plisio.net/documentation/endpoints/plisio-fee</p> <p>Parameters:</p> Name Type Description Default <code>currency</code> <code>str</code> <p>Currency.</p> <code>None</code> <code>addresses</code> <code>list</code> <p>Addresses</p> <code>None</code> <code>amounts</code> <code>list</code> <p>Amounts.</p> <code>None</code> <code>type</code> <code>str</code> <p>Type.</p> <code>None</code> <code>fee_plan</code> <code>str</code> <p>Fee plan.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/client.py</code> <pre><code>def plisio_fee(  # pylint: disable=too-many-arguments\nself,\ncurrency: _t.OptionalCurrencies = None,\naddresses: _t.OptionalListStr = None,\namounts: _t.OptionalListNumberLike = None,\ntype: _t.OptionalTransactionType = None,  # pylint: disable=redefined-builtin\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n    Plisio fee.\n    See Also:\n        https://plisio.net/documentation/endpoints/plisio-fee\n    Args:\n        currency (str): Currency.\n        addresses (list): Addresses\n        amounts (list): Amounts.\n        type (str): Type.\n        fee_plan (str): Fee plan.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nparams = self._get_params(locals())\nreturn self._get(\"operations/plisio-fee\", data=params, force_params=True)\n</code></pre>"},{"location":"reference/clients/client/#src.plisio.clients.client.Client.transaction_details","title":"<code>transaction_details(id)</code>","text":"<p>Get transaction details.</p> See Also <p>https://plisio.net/documentation/endpoints/transaction-details</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>Transaction ID.</p> required <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/client.py</code> <pre><code>def transaction_details(self, id: _t.Text) -&gt; _t.Result:  # pylint: disable=invalid-name\n\"\"\"\n    Get transaction details.\n    See Also:\n        https://plisio.net/documentation/endpoints/transaction-details\n    Args:\n        id (str): Transaction ID.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nreturn self._get(\"operations\", data={\"id\": id}, force_params=True)\n</code></pre>"},{"location":"reference/clients/client/#src.plisio.clients.client.Client.transactions","title":"<code>transactions(page=None, limit=None, shop_id=None, type=None, status=None, currency=None, search=None)</code>","text":"<p>Get transactions.</p> See Also <p>https://plisio.net/documentation/endpoints/transactions</p> <p>Parameters:</p> Name Type Description Default <code>page</code> <code>int</code> <p>Page.</p> <code>None</code> <code>limit</code> <code>int</code> <p>Limit.</p> <code>None</code> <code>shop_id</code> <code>int</code> <p>Shop ID.</p> <code>None</code> <code>type</code> <code>str</code> <p>Type.</p> <code>None</code> <code>status</code> <code>str</code> <p>Status.</p> <code>None</code> <code>currency</code> <code>str</code> <p>Currency.</p> <code>None</code> <code>search</code> <code>str</code> <p>Search.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/client.py</code> <pre><code>def transactions(  # pylint: disable=too-many-arguments\nself,\npage: _t.OptionalNumberLike = None,\nlimit: _t.OptionalNumberLike = None,\nshop_id: _t.OptionalNumberLike = None,\ntype: _t.OptionalTransactionStatus = None,  # pylint: disable=redefined-builtin\nstatus: _t.OptionalTransactionStatus = None,\ncurrency: _t.OptionalCurrencies = None,\nsearch: _t.OptionalText = None,\n) -&gt; _t.Result:\n\"\"\"\n    Get transactions.\n    See Also:\n        https://plisio.net/documentation/endpoints/transactions\n    Args:\n        page (int): Page.\n        limit (int): Limit.\n        shop_id (int): Shop ID.\n        type (str): Type.\n        status (str): Status.\n        currency (str): Currency.\n        search (str): Search.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nparams = self._get_params(locals())\nreturn self._get(\"operations\", data=params, force_params=True)\n</code></pre>"},{"location":"reference/clients/client/#src.plisio.clients.client.Client.withdraw","title":"<code>withdraw(currency, type, to, amount, fee_plan=None)</code>","text":"<p>Withdraw.</p> See Also <p>https://plisio.net/documentation/endpoints/withdrawal-mass-withdrawal</p> <p>Parameters:</p> Name Type Description Default <code>currency</code> <code>str</code> <p>Currency.</p> required <code>type</code> <code>str</code> <p>Type.</p> required <code>to</code> <code>str</code> <p>To.</p> required <code>amount</code> <code>int</code> <p>Amount.</p> required <code>fee_plan</code> <code>str</code> <p>Fee plan.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>_t.Result</code> <p>Response data.</p> <p>Raises:</p> Type Description <code>PlisioRequestException</code> <p>If request failed.</p> <code>PlisioAPIException</code> <p>If API returned error.</p> Source code in <code>src/plisio/clients/client.py</code> <pre><code>def withdraw(  # pylint: disable=too-many-arguments\nself,\ncurrency: _t.Currencies,\ntype: _t.WithdrawType,  # pylint: disable=redefined-builtin\nto: _t.Text,  # pylint: disable=invalid-name\namount: _t.NumberLike,\nfee_plan: _t.OptionalFeePlans = None,\n) -&gt; _t.Result:\n\"\"\"\n    Withdraw.\n    See Also:\n        https://plisio.net/documentation/endpoints/withdrawal-mass-withdrawal\n    Args:\n        currency (str): Currency.\n        type (str): Type.\n        to (str): To.\n        amount (int): Amount.\n        fee_plan (str): Fee plan.\n    Returns:\n        dict: Response data.\n    Raises:\n        PlisioRequestException: If request failed.\n        PlisioAPIException: If API returned error.\n    \"\"\"\nparams = self._get_params(locals())\nreturn self._get(\"operations/withdraw\", data=params, force_params=True)\n</code></pre>"}]}